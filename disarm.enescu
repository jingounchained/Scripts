#debuglevel 5
################################################################################################################################
# Smart Disarm Script v5.8 - For Dragonrealms - by Shroom
# Specialized for thieves, works for anyone
# - Analyzes the appraisal difficulty of the trap compared to what type of trap it is
# - Dynamically changes mode of disarm (Blind, Quick, Normal, Careful) according to how difficult trap is
# - Tosses box if trap is WAY too hard, or if you fail too many times in a row
# - Handles Blown Traps (determines what kind of trap it was, reacts/gets healed accordingly)
# - Handles Lockpick Rings/Cases
# - Tracks total number of boxes picked per session and total boxes picked over ALL TIME running the script
# - Added variable to put armor back on at the end (if it removes any at the beginning)
# - Added variable for WORN gem pouches, so script will work with worn pouches instead of pulling them from a container
# - Cleaned up/Optimized a ton of code - changed all script variable checks (toupper). Now variables don't have to be in all caps.
# - Robustified the guild check section, armor check section. Now checks for hand armor as part of the armor check
# - SPECIAL REQUEST - Added support to ONLY Disarm boxes, if you want to make some pet boxes
# - SPECIAL REQUEST - PICK BOXES FOR OTHERS! Simply start the script by using the player's name as a variable
# Example - .disarm Bob - will wait for boxes from Bob, disarm and pick them and give them back to Bob. (THIS IGNORES IF YOU ARE MIND LOCKED)
# - ADDED Much better multi character support - Now can easily set different variables for different characters. 
#
# LAST UPDATE - 4/03/18
################################################################################################################################
#####################
## USER VARIABLES 
#####################
## YOU MUST SET YOUR CHARACTER'S NAME  
var CHARACTER1 Djordje
var CHARACTER2 Harmacist
var CHARACTER3 Baalshamin
var CHARACTER4 Arsonil

## MAKE SURE TO UPDATE THE VARIABLES THAT ARE SPECIFIC TO EACH DIFFERENT CHARACTER BELOW 

if ("$charactername" = "%CHARACTER1") then
     {
     ## SET YOUR BAGS WHERE BOXES CAN BE FOUND
     ## AND/OR WHERE YOUR ARMOR/HAND ITEMS CAN BE STOWED
     var container1 pack
     var container2 satchel
     var container3 lootpouch
     var sheath harness
     ## Do you WEAR your GEM POUCH or do you keep them stowed away in your bags?
     ## (YES or NO) - Yes if you wear one, NO if you do not wear a gem pouch
     var gempouchWorn YES
     ## DO YOUR GEM POUCHES HAVE SOME WEIRD SYNTAX? SET IT HERE. LEAVE AT GEM POUCH IF NORMAL
     var gempouch gem pouch
     ## WHERE DO WE STORE YOUR COMPLETELY FULL, TIED UP GEM POUCHES? (CLOSABLE CONTAINER!)
     var gempouch.container I DONT
     # ANY HAND WORN ARMOR?
     var knuckles claw
     #### ARE YOU USING A LOCKPICK RING or LOCKPICK CASE? (YES OR NO) (Auto-Detects if case or ring)
     var lockpick.ring YES
     # WHERE DO YOU STORE EXTRA LOCKPICKS FOR RESTOCKING YOUR LOCKPICK RING/CASE? (IF ANY - Not necessary to set)
     var pickstorage BOOT
     #### DO YOU WANT TO PUT YOUR ARMOR BACK ON AT THE END? (IF IT TOOK ANY OFF FIRST?)
     var wear.armor YES
     # CONTINUE PICKING AFTER MIND LOCK? (YES OR NO) - NO WILL STOP PICKING ONCE MIND LOCKED
     # SET TO YES IF YOU WANT TO CONTINUE PICKING UNTIL ALL THE BOXES ARE GONE AND IGNORE MINDSTATE
     var keep.picking YES
     # MOVE.ROOMS (YES OR NO) - SET TO YES IF YOU PICK BOXES IN A ROOM WITH OTHER PLAYERS
     # THIS WILL MOVE ROOMS WHEN DISARMING AREA-WIDE TRAPS THAT CAN HURT/EFFECT OTHERS
     var MOVE.ROOMS NO
     # SET YOUR "STARTING" ROOM IN AUTOMAPPER (MAIN ROOM YOU WANT TO PICK BOXES IN OR RETURN TO)
     # THESE VARIABLES DO NOT MATTER IF YOU HAVE MOVE.ROOMS SET TO NO
     var STARTING.ROOM NULL
     # SET YOUR "SAFE" ROOM (FOR DISARMING AREA-WIDE TRAPS THAT CAN HURT OTHERS)
     var SAFE.ROOM NULL
     #Special Request - Pet box Creator
     #DISARM ONLY?? (YES OR NO) (Skips lockpicking/looting COMPLETELY - this is ONLY for if you just want to make some pet boxes)
     var disarmOnly NO
     ## Set the special bag to put only disarmed boxes in
     var disarmBag white back
     ###################################
     # THIEF ONLY VARIABLES
     ###################################
     # SET THE KHRI YOU WANT TO USE (IGNORE IF NON-THIEF)
     var khri safe focus sight avoidance
     # HARVEST TRAPS? (YES OR NO)
     # Harvesting increases overall time of picking SIGNIFICANTLY but also increases EXP per box
     var harvest NO
     # DO YOU WANT TO KEEP ALL THE COMPONENTS YOU HARVEST? (YES OR NO)
     # SCRIPT WILL ALWAYS KEEP CUBES IF SCRIPT FINDS THEM, WILL DROP ANYTHING ELSE IF NO
     var keepcomponent YES
     # NAME OF YOUR COMPONENT CONTAINER
     var componentcontainer dark.pouch
     #### BASE DIFFICULTY ADJUSTER. FOR INCREASING DIFFICULTY MANUALLY ( -5 to 5 ) DEFAULT IS 0
     #### LOWER THIS NUMBER TO MAKE TRAPS TEACH BETTER/HIGHER RISK - (USE QUICK/BLIND MORE OFTEN)
     #### RAISE THIS NUMBER TO MAKE TRAPS EASIER/LESS LIKELY TO EXPLODE - (USE CAREFUL MORE OFTEN)
     var baseline_difficulty 5
     goto INIT
     }
     
if ("$charactername" = "%CHARACTER2") then
     {
     ## SET YOUR BAGS WHERE BOXES CAN BE FOUND
     ## AND/OR WHERE YOUR ARMOR/HAND ITEMS CAN BE STOWED
     var container1 pack
     var container2 watersilk bag
     var container3 lootsack
     var sheath pack
     ## Do you WEAR your GEM POUCH or do you keep them stowed away in your bags?
     ## (YES or NO) - Yes if you wear one, NO if you do not wear a gem pouch
     var gempouchWorn YES
     ## DO YOUR GEM POUCHES HAVE SOME WEIRD SYNTAX? SET IT HERE. LEAVE AT GEM POUCH IF NORMAL
     var gempouch black.pouch
     ## WHERE DO WE STORE YOUR COMPLETELY FULL, TIED UP GEM POUCHES? (CLOSABLE CONTAINER!)
     var gempouch.container quiver
     # ANY HAND WORN ARMOR?
     var knuckles claw
     #### ARE YOU USING A LOCKPICK RING or LOCKPICK CASE? (YES OR NO) (Auto-Detects if case or ring)
     var lockpick.ring YES
     # WHERE DO YOU STORE EXTRA LOCKPICKS FOR RESTOCKING YOUR LOCKPICK RING/CASE? (IF ANY - Not necessary to set)
     var pickstorage longcoat
     #### DO YOU WANT TO PUT YOUR ARMOR BACK ON AT THE END? (IF IT TOOK ANY OFF FIRST?)
     var wear.armor YES
     # CONTINUE PICKING AFTER MIND LOCK? (YES OR NO) - NO WILL STOP PICKING ONCE MIND LOCKED
     # SET TO YES IF YOU WANT TO CONTINUE PICKING UNTIL ALL THE BOXES ARE GONE AND IGNORE MINDSTATE
     var keep.picking YES
     # MOVE.ROOMS (YES OR NO) - SET TO YES IF YOU PICK BOXES IN A ROOM WITH OTHER PLAYERS
     # THIS WILL MOVE ROOMS WHEN DISARMING AREA-WIDE TRAPS THAT CAN HURT/EFFECT OTHERS
     var MOVE.ROOMS NO
     # SET YOUR "STARTING" ROOM IN AUTOMAPPER (MAIN ROOM YOU WANT TO PICK BOXES IN OR RETURN TO)
     # THESE VARIABLES DO NOT MATTER IF YOU HAVE MOVE.ROOMS SET TO NO
     var STARTING.ROOM 0
     # SET YOUR "SAFE" ROOM (FOR DISARMING AREA-WIDE TRAPS THAT CAN HURT OTHERS)
     var SAFE.ROOM 0
     #Special Request - Pet box Creator
     #DISARM ONLY?? (YES OR NO) (Skips lockpicking/looting COMPLETELY - this is ONLY for if you just want to make some pet boxes)
     var disarmOnly NO
     ## Set the special bag to put only disarmed boxes in
     var disarmBag white back
     ###################################
     # THIEF ONLY VARIABLES
     ###################################
     # SET THE KHRI YOU WANT TO USE (IGNORE IF NON-THIEF)
     var khri safe focus sight avoidance
     # HARVEST TRAPS? (YES OR NO)
     # Harvesting increases overall time of picking SIGNIFICANTLY but also increases EXP per box
     var harvest NO
     # DO YOU WANT TO KEEP ALL THE COMPONENTS YOU HARVEST? (YES OR NO)
     # SCRIPT WILL ALWAYS KEEP CUBES IF SCRIPT FINDS THEM, WILL DROP ANYTHING ELSE IF NO
     var keepcomponent YES
     # NAME OF YOUR COMPONENT CONTAINER
     var componentcontainer dark.pouch
     #### BASE DIFFICULTY ADJUSTER. FOR INCREASING DIFFICULTY MANUALLY ( -5 to 5 ) DEFAULT IS 0
     #### LOWER THIS NUMBER TO MAKE TRAPS TEACH BETTER/HIGHER RISK - (USE QUICK/BLIND MORE OFTEN)
     #### RAISE THIS NUMBER TO MAKE TRAPS EASIER/LESS LIKELY TO EXPLODE - (USE CAREFUL MORE OFTEN)     
     var baseline_difficulty -1
     goto INIT
     }
     
if ("$charactername" = "%CHARACTER3") then
     {
     ## SET YOUR BAGS WHERE BOXES CAN BE FOUND
     ## AND/OR WHERE YOUR ARMOR/HAND ITEMS CAN BE STOWED
     var container1 pack
     var container2 portfolio
     var container3 portal
     var sheath pack
     ## Do you WEAR your GEM POUCH or do you keep them stowed away in your bags?
     ## (YES or NO) - Yes if you wear one, NO if you do not wear a gem pouch
     var gempouchWorn NO
     ## DO YOUR GEM POUCHES HAVE SOME WEIRD SYNTAX? SET IT HERE. LEAVE AT GEM POUCH IF NORMAL
     var gempouch black.pouch
     ## WHERE DO WE STORE YOUR COMPLETELY FULL, TIED UP GEM POUCHES? (CLOSABLE CONTAINER!)
     var gempouch.container water bag
     # ANY HAND WORN ARMOR?
     var knuckles knuckle
     #### ARE YOU USING A LOCKPICK RING or LOCKPICK CASE? (YES OR NO) (Auto-Detects if case or ring)
     var lockpick.ring YES
     # WHERE DO YOU STORE EXTRA LOCKPICKS FOR RESTOCKING YOUR LOCKPICK RING/CASE? (IF ANY - Not necessary to set)
     var pickstorage pouch
     #### DO YOU WANT TO PUT YOUR ARMOR BACK ON AT THE END? (IF IT TOOK ANY OFF FIRST?)
     var wear.armor YES
     # CONTINUE PICKING AFTER MIND LOCK? (YES OR NO) - NO WILL STOP PICKING ONCE MIND LOCKED
     # SET TO YES IF YOU WANT TO CONTINUE PICKING UNTIL ALL THE BOXES ARE GONE AND IGNORE MINDSTATE
     var keep.picking YES
     # MOVE.ROOMS (YES OR NO) - SET TO YES IF YOU PICK BOXES IN A ROOM WITH OTHER PLAYERS
     # THIS WILL MOVE ROOMS WHEN DISARMING AREA-WIDE TRAPS THAT CAN HURT/EFFECT OTHERS
     var MOVE.ROOMS NO
     # SET YOUR "STARTING" ROOM IN AUTOMAPPER (MAIN ROOM YOU WANT TO PICK BOXES IN OR RETURN TO)
     # THESE VARIABLES DO NOT MATTER IF YOU HAVE MOVE.ROOMS SET TO NO
     var STARTING.ROOM 260
     # SET YOUR "SAFE" ROOM (FOR DISARMING AREA-WIDE TRAPS THAT CAN HURT OTHERS)
     var SAFE.ROOM 260
     #Special Request - Pet box Creator
     #DISARM ONLY?? (YES OR NO) (Skips lockpicking/looting COMPLETELY - this is ONLY for if you just want to make some pet boxes)
     var disarmOnly NO
     ## Set the special bag to put only disarmed boxes in
     var disarmBag white back
     ###################################
     # THIEF ONLY VARIABLES
     ###################################
     # SET THE KHRI YOU WANT TO USE (IGNORE IF NON-THIEF)
     var khri safe focus sight avoidance
     # HARVEST TRAPS? (YES OR NO)
     # Harvesting increases overall time of picking SIGNIFICANTLY but also increases EXP per box
     var harvest NO
     # DO YOU WANT TO KEEP ALL THE COMPONENTS YOU HARVEST? (YES OR NO)
     # SCRIPT WILL ALWAYS KEEP CUBES IF SCRIPT FINDS THEM, WILL DROP ANYTHING ELSE IF NO
     var keepcomponent YES
     # NAME OF YOUR COMPONENT CONTAINER
     var componentcontainer dark.pouch
     #### BASE DIFFICULTY ADJUSTER. FOR INCREASING DIFFICULTY MANUALLY ( -5 to 5 ) DEFAULT IS 0
     #### LOWER THIS NUMBER TO MAKE TRAPS TEACH BETTER/HIGHER RISK - (USE QUICK/BLIND MORE OFTEN)
     #### RAISE THIS NUMBER TO MAKE TRAPS EASIER/LESS LIKELY TO EXPLODE - (USE CAREFUL MORE OFTEN)     
     var baseline_difficulty -1
     goto INIT
     }
     
if ("$charactername" = "%CHARACTER4") then
     {
     ## SET YOUR BAGS WHERE BOXES CAN BE FOUND
     ## AND/OR WHERE YOUR ARMOR/HAND ITEMS CAN BE STOWED
     var container1 pack
     var container2 scav.belt
     var container3 pack
     var sheath pack
     ## Do you WEAR your GEM POUCH or do you keep them stowed away in your bags?
     ## (YES or NO) - Yes if you wear one, NO if you do not wear a gem pouch
     var gempouchWorn YES
     ## DO YOUR GEM POUCHES HAVE SOME WEIRD SYNTAX? SET IT HERE. LEAVE AT GEM POUCH IF NORMAL
     var gempouch gem pouch
     ## WHERE DO WE STORE YOUR COMPLETELY FULL, TIED UP GEM POUCHES? (CLOSABLE CONTAINER!)
     var gempouch.container EDDY
     # ANY HAND WORN ARMOR?
     var knuckles 
     #### ARE YOU USING A LOCKPICK RING or LOCKPICK CASE? (YES OR NO) (Auto-Detects if case or ring)
     var lockpick.ring YES
     # WHERE DO YOU STORE EXTRA LOCKPICKS FOR RESTOCKING YOUR LOCKPICK RING/CASE? (IF ANY - Not necessary to set)
     var pickstorage bag
     #### DO YOU WANT TO PUT YOUR ARMOR BACK ON AT THE END? (IF IT TOOK ANY OFF FIRST?)
     var wear.armor NO
     # CONTINUE PICKING AFTER MIND LOCK? (YES OR NO) - NO WILL STOP PICKING ONCE MIND LOCKED
     # SET TO YES IF YOU WANT TO CONTINUE PICKING UNTIL ALL THE BOXES ARE GONE AND IGNORE MINDSTATE
     var keep.picking YES
     # MOVE.ROOMS (YES OR NO) - SET TO YES IF YOU PICK BOXES IN A ROOM WITH OTHER PLAYERS
     # THIS WILL MOVE ROOMS WHEN DISARMING AREA-WIDE TRAPS THAT CAN HURT/EFFECT OTHERS
     var MOVE.ROOMS NO
     # SET YOUR "STARTING" ROOM IN AUTOMAPPER (MAIN ROOM YOU WANT TO PICK BOXES IN OR RETURN TO)
     # THESE VARIABLES DO NOT MATTER IF YOU HAVE MOVE.ROOMS SET TO NO
     var STARTING.ROOM 260
     # SET YOUR "SAFE" ROOM (FOR DISARMING AREA-WIDE TRAPS THAT CAN HURT OTHERS)
     var SAFE.ROOM 260
     #Special Request - Pet box Creator
     #DISARM ONLY?? (YES OR NO) (Skips lockpicking/looting COMPLETELY - this is ONLY for if you just want to make some pet boxes)
     var disarmOnly NO
     ## Set the special bag to put only disarmed boxes in
     var disarmBag white back
     ###################################
     # THIEF ONLY VARIABLES
     ###################################
     # SET THE KHRI YOU WANT TO USE (IGNORE IF NON-THIEF)
     var khri safe focus sight avoidance
     # HARVEST TRAPS? (YES OR NO)
     # Harvesting increases overall time of picking SIGNIFICANTLY but also increases EXP per box
     var harvest NO
     # DO YOU WANT TO KEEP ALL THE COMPONENTS YOU HARVEST? (YES OR NO)
     # SCRIPT WILL ALWAYS KEEP CUBES IF SCRIPT FINDS THEM, WILL DROP ANYTHING ELSE IF NO
     var keepcomponent YES
     # NAME OF YOUR COMPONENT CONTAINER
     var componentcontainer dark.pouch
     #### BASE DIFFICULTY ADJUSTER. FOR INCREASING DIFFICULTY MANUALLY ( -5 to 5 ) DEFAULT IS 0
     #### LOWER THIS NUMBER TO MAKE TRAPS TEACH BETTER/HIGHER RISK - (USE QUICK/BLIND MORE OFTEN)
     #### RAISE THIS NUMBER TO MAKE TRAPS EASIER/LESS LIKELY TO EXPLODE - (USE CAREFUL MORE OFTEN)     
     var baseline_difficulty -1
     goto INIT
     }
     echo **** ERROR! YOU DID NOT SET YOUR VARIABLES PROPERLY!!
     echo **** Edit the script and make sure to add your character's name to: var CHARACTER1
     echo **** If you use the script with different characters you can set them under CHARACTER2, CHARACTER3, CHARACTER4
     exit
##############################################################################
##############################################################################
# END USER VARIABLES - DO NOT TOUCH ANYTHING BELOW
##############################################################################
##############################################################################
### DEFAULT SCRIPT VARIABLES - DO NOT TOUCH
INIT:
var component_list sealed vial|tube|needle|seal|bladder|studs|blade|\brune\b|spring|hammer|disc|dart|reservoir|face|\bpin\b|striker|cube|sphere|leg|crystal|circle|clay
var multi_trap ON
var multi_lock ON
var thief_hide NO
var ARMOR_STOW OFF
var trap_type null
var BOXES 0
var LOCAL 0
var GIVEBOX NO
var FIRSTIME YES
var armor null
var armor1 null
var armor2 null
var armor3 null
var armor4 null
var armor5 null
var armor6 null
var armor7 null
var armor8 null
var armor9 null
var armor10 null
var total_armor 0
var dismantle
if matchre($Boxes, \D+) then put #var Boxes 0
##################################
## SCRIPT ACTIONS
##################################
# TRAP TYPE MATCHING~
     action var trap_type acid;echo ***ACID TRAP! when As you look closely, you notice a tiny hole right next to the lock which looks to be a trap of some kind.
     action var trap_type boomer;echo ***BOOMER TRAP! when A glistening black square, surrounded by a tight ring of fibrous cord, catches your eye.
     action var trap_type reaper;echo ***REAPER TRAP!! when A crust-covered black scarab of some unidentifiable substance clings to the
     action var trap_type fire_ant;echo ***FIRE ANT TRAP!! when The bag twitches on occasion, leading you to believe the blade's presence likely to be a very bad thing.
     action var trap_type poison_bolt;echo ***POISON BOLT TRAP when concealing the points of several crossbow bolts glistening with moisture.
     action var trap_type bolt;echo ***BOLT TRAP! when concealing the points of several wickedly barbed crossbow bolts.
     action var trap_type concussion;echo ***CONCUSSION TRAP!! when you see a tiny metal tube just poking out of a small wad of brown clay|infamous shockwave trap
     action var trap_type cyanide;echo ***CYANIDE TRAP! when The glint of silver from the tip of a dart
     action var trap_type disease;echo ***DISEASE TRAP! when swollen animal bladder recessed inside the keyhole.
     action var trap_type flea;echo ***FLEA TRAP! when small glass tube of milky-white opacity
     action var trap_type gas;echo ***GAS TRAP! when You notice a vial of lime green liquid just under the
     action var trap_type lightning;echo ***LIGHTNING TRAP!! when Looking closely into the keyhole, you spy what appears to be a pulsating ball
     action var trap_type naphtha_soaker;echo ***NAPHTHA SOAKER TRAP!! when Though it's hard to see, there also appears to be a liquid-filled bladder inside the notch.
     action var trap_type naphtha;echo ***NAPHTHA TRAP! when A tiny striker is cleverly concealed under the lid, set to ignite a frighteningly large vial of naphtha.
     action var trap_type poison_local;echo ***POISON TRAP! when You notice a tiny needle with a greenish discoloration on its tip hidden next to the keyhole.
     action var trap_type poison_nerve;echo ***NERVE POISON TRAP! when You notice a tiny needle with a rust colored discoloration on its tip hidden next to the keyhole.
     action var trap_type scythe;echo ***SCYTHE TRAP! when Out of the corner of your eye, you notice a glint of razor sharp steel hidden within a suspicious looking seam on the
     action var trap_type shocker;echo ***SHOCKER TRAP! when You notice two silver studs right below the keyhole which look dangerously out of place there.
     action var trap_type shrapnel;echo ***SHRAPNEL TRAP!!! when keyhole is packed tightly with a powder around the insides of the lock|means this is the shrapnel trap
     action var trap_type teleport;echo ***TELEPORT TRAP!!!! when are covered with a thin metal circle that has been lacquered with a shade of
     action var trap_type bouncer;echo ***BOUNCER TRAP when Connected to the pin is a small shaft that runs downward into a shadow.
     action var trap_type curse;echo ***CURSE TRAP when you notice a small glowing rune hidden
     action var trap_type frog;echo ***FROG TRAP when with a careful eye, you notice a lumpy green rune hidden inside the
     action var trap_type laughing;echo ***LAUGHING TRAP when tiny glass tube filled with a black gaseous substance of some sort and a tiny hammer|^That tiny vial filled with a black liquid
     action var trap_type mana_sucker;echo ***MANA TRAP when The seal is covered in strange runes and a glass sphere is embedded within it.
     action var trap_type mime;echo ***MIME TRAP when A tiny bronze face, Fae in appearance, grins ridiculously from its place on the
     action var trap_type shadowling;echo ***SHADOWLING TRAP when with a careful eye, you notice a small black crystal deep in the shadows of the
     action var trap_type sleeper;echo ***SLEEPER TRAP when Two sets of six pinholes on either side of the
#################################################################
## THESE DETERMINE THE BASE DIFFICULTY LEVEL OF A TRAP
#################################################################
     action var app_difficulty -8 when An aged grandmother could
     action var app_difficulty -7 when is a laughable matter
     action var app_difficulty -5 when is a trivially constructed
     action var app_difficulty -4 when will be a simple matter for you to
     action var app_difficulty -3 when should not take long with your skills
     action var app_difficulty 0 when is precisely at your skill level
     action var app_difficulty 1 when with only minor troubles
     action var app_difficulty 2 when got a good shot at
     action var app_difficulty 3 when some chance of being able
     action var app_difficulty 5 when with persistence you believe you could
     action var app_difficulty 6 when would be a longshot
     action var app_difficulty 7 when minimal chance
     action var app_difficulty 8 when You really don't have any chance
     action var app_difficulty 9 when Prayer would be a good start
     action var app_difficulty 11 when You could just jump off a cliff
     action var app_difficulty 13 when same shot as a snowball
     action var app_difficulty 15 when pitiful snowball encased in the Flames
## MISC ACTIONS
     #action put #queue clear; send $lastcommand when ^\.\.\.wait|^Sorry, you may only type
     action var multi_trap ON when is not yet fully disarmed
     action var multi_lock ON when discover another lock protecting
## LOCK MODE
     action var mode blind when ^This lock is a laughable matter|^An aged grandmother could open this|^The lock is a trivially constructed piece of junk|will be a simple matter for you
     action var mode quick when lock's structure is relatively basic|should not take long with your skills|You can unlock the (.+) with only minor troubles
     action var mode normal when ^You think this lock is precisely at your skill level|The lock has the edge on you
     action var mode careful when ^The odds are against you, but with persistence you believe you could pick|You have some chance of being able to pick open|would be a longshot
     action var mode careful when ^Prayer would be a good start for any attempt of yours at picking|amazingly mininal chance at picking|don't have any change at picking|snowball|jump off a cliff
###################################################################
## BLOWN TRAP ACTIONS
     action goto TELEPORT_OK when ^Elanthia seems to fall away from under your feet|^You experience a great wrenching in your gut and everything goes utterly black|As your vision slowly returns, you find yourself at|You find yourself curled up on the ground at
     action goto TELEPORT_DEATH when Your last painful thought before you die is the horrified realization
     action goto CONCUSSION_DEATH when ^As soon as you look up, your entire world explodes in a crash of deafening sound and searing heat|way out of your league before oblivion takes you
     action goto DIED.TRAP when way out of your league before oblivion takes you
     action goto BLOWN.TRAP when The stinging, sandy winds have made you pause|^The sand devil spins and whirls|several very angry vykathi reapers standing right beside you
     action goto BLOWN.TRAP when A black cloud of ash and soot explodes out of the bladder
     action goto BLOWN.TRAP when With a sinister swishing noise, a deadly sharp scythe blade
     action goto BLOWN.TRAP when ^A tiny dart lodges into your skull
     action goto BLOWN.TRAP when ^You are diseased|only to be greeted with a loud "Poof" followed by a cloud of small particles
     action goto BLOWN.TRAP when Almost immediately, you grow dizzy
     action goto BLOWN.TRAP when you realize it was actually a swarm of fleas
     action goto BLOWN.TRAP when Like a Halfling blowing smoke rings
     action goto BLOWN.TRAP when You fall to your knees coughing and gagging|inhale all of the poisonous gas yourself
     action goto BLOWN.TRAP when You get the feeling that life suddenly got alot funnier|^You are completely incapacitated with laughter|^The hammer slips from its locked position and strikes the tube with a tiny "clink"
     action goto BLOWN.TRAP when you notice the world around you has gotten much bigger|^Your head is ringing so much you can't think
     action goto BLOWN.TRAP when emits a sound like tormented souls being freed
     action goto BLOWN.TRAP when You try to scream but no sound
     action goto BLOWN.TRAP when A stream of corrosive acid sprays out
     action goto BLOWN.TRAP when An acrid stream of sulfurous air
     action goto BLOWN.TRAP when With a barely audible click
     action goto BLOWN.TRAP when There is a sudden flash of greenish light
     action goto BLOWN.TRAP when You hear a snap as a bronze seal
     action goto BLOWN.TRAP when ^Nothing happened. Maybe it was a dud|begins to shake violently
     action goto BLOWN.TRAP when Just as your ears register the sound of a sharp snap
     action goto BLOWN.TRAP when You make a small hole in the side of the box and take deep breath
     action goto BLOWN.TRAP when Moving with the grace of a pregnant goat
     action goto BLOWN.TRAP when You barely have time to register a faint click before a blinding flash explodes|The liquid contents of the bladder empty, spraying you completely
     action goto BLOWN.TRAP when Before you have time to think what it might be you find
     action goto BLOWN.TRAP when To your horror, oversized, red, ant-like insects emerge and begin to race across your hands
     action goto HEAL.PAUSE when The ringing in your ears continues
     pause 0.2
     put exp survival 0
     waitfor Overall state of mind
     pause 0.001
     if_1 then
     {
          var user %1
          var GIVEBOX YES
          send whisper %user Give me a second to prepare. When ready I'll whisper you and then hand me a new box.
     }
     GOTO TOP
######################################################################################
##### TRAP DIFFICULTY MODIFIERS
##### THIS SETS A STATIC DIFFICULTY LEVEL FOR EACH TRAP TYPE
##### THEN ADDS THAT TO THE APPRAISED DIFFICULTY TO DETERMINE WHAT MODE OF DISARM TO USE
##########################################################################################
trap_diff_compute:
### setting trap difficulties...
### set from -5 to 5 (OR BEYOND) depending on how worried you are about blowing that particular trap
     if "%trap_type" = "concussion" then var trap_difficulty 9
     if "%trap_type" = "teleport" then var trap_difficulty 7
     if "%trap_type" = "shrapnel" then var trap_difficulty 7
     if "%trap_type" = "disease" then var trap_difficulty 7
     if "%trap_type" = "reaper" then var trap_difficulty 7
     if "%trap_type" = "fire_ant" then var trap_difficulty 7
     if "%trap_type" = "gas" then var trap_difficulty 6
     if "%trap_type" = "lightning" then var trap_difficulty 6
     if "%trap_type" = "naphtha_soaker" then var trap_difficulty 5
     if "%trap_type" = "naphtha" then var trap_difficulty 5
     if "%trap_type" = "acid" then var trap_difficulty 3
     if "%trap_type" = "boomer" then var trap_difficulty 3
     if "%trap_type" = "scythe" then var trap_difficulty 3
     if "%trap_type" = "shocker" then var trap_difficulty 3
     if "%trap_type" = "poison_local" then var trap_difficulty 2
     if "%trap_type" = "poison_nerve" then var trap_difficulty 2
     if "%trap_type" = "poison_bolt" then var trap_difficulty 2
     if "%trap_type" = "bolt" then var trap_difficulty 2
     if "%trap_type" = "cyanide" then var trap_difficulty 2
     if "%trap_type" = "curse" then var trap_difficulty 1
     if "%trap_type" = "frog" then var trap_difficulty -1
     if "%trap_type" = "flea" then var trap_difficulty -2
     if "%trap_type" = "bouncer" then var trap_difficulty -3
     if "%trap_type" = "laughing" then var trap_difficulty -3
     if "%trap_type" = "sleeper" then var trap_difficulty -3
     if "%trap_type" = "mime" then var trap_difficulty -4
     if "%trap_type" = "mana_sucker" then var trap_difficulty -5
     if "%trap_type" = "shadowling" then var trap_difficulty -5
# computing...
     var total_difficulty 0
     math total_difficulty add %baseline_difficulty
     math total_difficulty add %trap_difficulty
     math total_difficulty add %app_difficulty
     pause 0.1
     var mode normal
     if %total_difficulty < -2 then var mode blind
     if %total_difficulty = -2 then var mode quick
     if %total_difficulty = -1 then var mode quick
     if %total_difficulty = 0 then var mode quick
     if %total_difficulty = 1 then var mode quick
     if %total_difficulty = 2 then var mode quick
     if %total_difficulty = 3 then var mode quick
     if %total_difficulty = 4 then var mode normal
     if %total_difficulty = 5 then var mode normal
     if %total_difficulty = 6 then var mode normal
     if %total_difficulty = 7 then var mode normal
     if %total_difficulty = 8 then var mode normal
     if %total_difficulty = 9 then var mode careful
     if %total_difficulty = 10 then var mode careful
     if %total_difficulty = 11 then var mode careful
     if %total_difficulty = 12 then var mode careful
     if %total_difficulty = 13 then var mode careful
     if %total_difficulty = 14 then var mode careful
     if %total_difficulty = 15 then var mode careful
     if %total_difficulty = 16 then var mode toss
     if %total_difficulty = 17 then var mode toss
     if %total_difficulty = 18 then var mode toss
     if %total_difficulty = 19 then var mode toss
     if %total_difficulty = 20 then var mode toss
     if %total_difficulty = 21 then var mode toss
     if %total_difficulty = 22 then var mode toss
     if %total_difficulty = 23 then var mode toss
     if %total_difficulty >= 24 then var mode toss
     RETURN
#################################################################################################################
TOP:
	if ($hidden = 1) then
          {
               send shiver
               pause 0.3
          }
     pause 0.0001
     pause 0.0001
     pause 0.0001
     gosub STOWING
     pause 0.1
     if ("$Guild" = "Warrior") then put #var Guild Warrior Mage
     if ("$Guild" = "Moon") then put #var Guild Moon Mage
     pause 0.2
     pause 0.2
     if !def(Guild) || !matchre("$Guild","(Thief|Barbarian|Empath|Warrior Mage|Cleric|Bard|Moon Mage|Ranger|Necromancer|Trader)") then
          {
               action var Guild $1;put #var Guild $1 when Guild: (\D+)
               send info;encum
               waitforre ^\s*Encumbrance\s*\:
               action remove Guild: (\S+)
               put #var save
               pause 0.5
          }
     if ("$Guild" = "Thief") then var k thump
     if ("$Guild" = "Barbarian") then var dismantle bash
     if ("$Guild" = "Bard") then var dismantle shriek
     if ("$Guild" = "Cleric") then var dismantle pray
     if ("$Guild" = "Warrior Mage") then var dismantle fire
     if ("$Guild" = "Moon Mage") then var dismantle focus
     if ("$Guild" = "Ranger") then var dismantle whistle
     if ("$Guild" = "Trader") then var dismantle salvage
     if ("$Guild" = "Empath") then var dismantle
     if ("$Guild" = "Necromancer") then var dismantle
     echo Guild: $Guild - Dismantle Type: %dismantle
     goto armor_Check

armor_Check:
counter set 0
hand_Check:
     pause 0.1
          matchre remove_Armor (hand wraps|handwraps|knuckles|hand claws|knuckleguards)
          matchre armor_Check1 You have nothing of that sort|You are wearing nothing of that sort|You aren't wearing anything
          put inv hand weapon
     matchwait 15
     goto armor_Check1
armor_Check1:
          matchre armor_Check1 ^\.\.\.wait|^Sorry, you may only type
          matchre remove_Armor (gauntlet|gloves|shield|claw guards|steel mail gloves|parry stick|handwraps|\bhat\b|hand claws|jacket|armwraps|footwraps|aegis|buckler|\bhood\b|\bcowl\b|\bheater|pavise|scutum|shield|sipar|\btarge\b|aventail|backplate|balaclava|barbute|bascinet|breastplate|\blongcoat\b|\bcap\b|\bcoat\b|\bcowl|cuirass|fauld|greaves|hauberk|helm|\bhood\b|jerkin|leathers|lorica|mantle|mask|morion|pants|(?<=(field|fluted|full|half) )\bplate\b|handguards|robe|sallet|shirt|sleeves|ticivara|tabard|tasset|thorakes|\blid\b|vambraces|vest|collar|coif|mitt|steel mail)
          matchre armor_None You have nothing of that sort|You are wearing nothing of that sort|You aren't wearing anything
          put inv armor
	matchwait
armor_Check2:
          matchre armor_Check1 ^\.\.\.wait|^Sorry, you may only type
          matchre remove_Armor (gauntlet|gloves|shield|claw guards|steel mail gloves|parry stick|handwraps|\bhat\b|hand claws|jacket|armwraps|footwraps|aegis|buckler|\bhood\b|\bcowl\b|\bheater|pavise|scutum|shield|sipar|\btarge\b|aventail|backplate|balaclava|barbute|bascinet|breastplate||\blongcoat\b\bcap\b|\bcoat\b|\bcowl|cuirass|fauld|greaves|hauberk|helm|\bhood\b|jerkin|leathers|lorica|mantle|mask|morion|pants|(?<=(field|fluted|full|half) )\bplate\b|handguards|robe|sallet|shirt|sleeves|ticivara|tabard|tasset|thorakes|\blid\b|vambraces|vest|collar|coif|mitt|steel mail)
          matchre Armor_Complete You have nothing of that sort|You are wearing nothing of that sort|You aren't wearing anything
          put inv armor
	matchwait

remove_Armor:
     var armor $0
     var LAST remove_Armor
          matchre stow_Armor ^\.\.\.wait|^Sorry, you may only type
          matchre stow_Armor ^You work|^You remove|^You pull|^You take|^You loosen|^You sling|^You slip|^You slide
          matchre armor_Check ^You have nothing of that|^Remove what
          put remove %armor
     matchwait
stow_Armor:
	var LAST stow_Armor_1
		matchre stow_Armor ^\.\.\.wait|^Sorry, you may only type
          matchre stow_Armor_2 any more room in|closed|no matter how you arrange
		matchre armor_Done ^You put your
		put put %armor in my %container1
	matchwait
stow_Armor_2:
	var LAST stow_Armor_2
		matchre stow_Armor_2 ^\.\.\.wait|^Sorry, you may only type
          matchre no_More_Stowing any more room in|closed|no matter how you arrange
	     matchre armor_Done ^You put your
	put put %armor in my %container2
	matchwait
armor_Done:
     counter add 1
     pause 0.1
     var total_armor %c
     var armor%c %armor
     goto armor_Check2
armor_None:
     ECHO **** NO ARMOR FOUND!
     var ARMOR_STOW OFF
     goto lock.check
Armor_Complete:
     var ARMOR_STOW ON
     ECHO #######################################
     ECHO # Removed all armor
     ECHO # Saved Armor Count: %total_armor
     if (%total_armor < 1) then
          {
               ECHO # NO ARMOR FOUND
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor1: %armor1
     if (%total_armor < 2) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor2: %armor2
     if (%total_armor < 3) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor3: %armor3
     if (%total_armor < 4) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor4: %armor4
     if (%total_armor < 5) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor5: %armor5
     if (%total_armor < 6) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor6: %armor6
     if (%total_armor < 7) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor7: %armor7
     if (%total_armor < 8) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor8: %armor8
     if (%total_armor < 9) then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor9: %armor9
     if (%total_armor < 10)  then
          {
               ECHO #######################################
               goto lock.check
          }
     ECHO # Armor10: %armor10
     ECHO #######################################
     ECHO
     pause 0.2
     goto lock.check
no_More_Stowing:
	echo **   No more room for stowing armor! Exiting script   **
     echo **   Make some more room in your bags! Or choose larger containers!
	put wear %armor
     pause 0.5
	goto done
lock.check:
	if (toupper("%lockpick.ring") = "YES") then gosub lockpick.ring.check
	goto main

###########################################################
##
## MAIN SCRIPT LOOP HERE!
##
###########################################################

main:
	pause 0.1
     if (toupper("%GIVEBOX") = "YES") then
          {
               put whisper %user Ready for a box!
               put nod %user
               waitfor offers you
               pause 0.4
               send accept
               pause
          }
	if ((toupper("%keep.picking") != "YES") && (toupper("%GIVEBOX") != "YES")) then
          {
               if $Locksmithing.LearningRate > 33 then goto LOCKED.SKILLS
          }
     if (("$Guild" = "Thief") && ($concentration > 50)) then
		{
            pause 0.1
            if ($Augmentation.Ranks < 180) then send kneel
			send khri %khri
			pause 2
			pause 0.5
            pause 0.1
            if (!$standing) then gosub stand
		}
	pause 0.4
	if (toupper("%GIVEBOX") != "YES") then gosub container_Check
	if ("$lefthand" = "Empty") then
		{
			send swap
               pause 0.2
		}
	else
		{
			GOSUB STOW left
               pause 0.2
			send swap
		}
	pause 0.5
	pause 0.1
disarm_sub:
	pause 0.1
	gosub glance_box
	gosub disarm_ID
     gosub trap_diff_compute
	if ("%mode" = "toss") then goto toss_box
	gosub disarm
	var disarm.count 0
	var harvest.count 0
	if (toupper("%harvest") = "YES") then gosub analyze
	if (toupper("%multi_trap") = "ON") then goto disarm_sub
	if (($roomid != %STARTING.ROOM) && ("%MOVE.ROOMS" = "YES")) then
		{
			gosub automove %STARTING.ROOM
			pause 0.1
		}
     if ((toupper("%disarmOnly") = "YES") && (toupper("%GIVEBOX") = "YES")) then goto GIVEBOX
     if (toupper("%disarmOnly") = "YES") then goto stowDisarmed
	if (toupper("%lockpick.ring") != "YES") then gosub get_Pick
lock_sub:
	pause 0.1
	gosub glance_box
	gosub pick_ID
	if ("%mode" = "toss") then goto toss_box
	pause 0.1
	gosub pick
	if (toupper("%multi_lock") = "ON") then goto lock_sub
	if (toupper("%lockpick.ring") != "YES") then gosub put_Away_Pick
GIVEBOX:
     if (toupper("%GIVEBOX") = "YES") then
          {
               if ("$righthand" = "Empty") then send swap
               pause 0.5
               pause 0.3
               put give %user
               waitforre accepts|accepted
               goto Continued
          }
	gosub loot
	gosub dismantle
Continued:
	if ("$Guild" = "Thief") then gosub fix_Lock
	gosub exp_Check
	goto main

container_Check:
     pause 0.1
     var container %container1
          matchre container_Check ^\.\.\.wait|^Sorry,
		matchre get_For_Disarm (\bcoffer\b|\btrunk\b|\bchest\b|\bstrongbox\b|\bskippet\b|\bcaddy\b|\bcrate\b|\bcasket\b|\bbox\b)
		matchre container_Check2 Encumbrance
	send look in my %container1;enc
	matchwait
container_Check2:
	pause 0.1
     var container %container2
          matchre container_Check2 ^\.\.\.wait|^Sorry,
		matchre get_For_Disarm (\bcoffer\b|\btrunk\b|\bchest\b|\bstrongbox\b|\bskippet\b|\bcaddy\b|\bcrate\b|\bcasket\b|\bbox\b)
		matchre container_Check3 Encumbrance
	send look in my %container2;enc
	matchwait
container_Check3:
	pause 0.1
     var container %container3
          matchre container_Check3 ^\.\.\.wait|^Sorry,
		matchre get_For_Disarm (\bcoffer\b|\btrunk\b|\bchest\b|\bstrongbox\b|\bskippet\b|\bcaddy\b|\bcrate\b|\bcasket\b|\bbox\b)
		matchre LOCKED.SKILLS Encumbrance
	send look in my %container3;enc
	matchwait

get_For_Disarm:
	var disarmit $1
	get.Box:
	pause 0.1
	pause 0.1
	pause 0.1
		var LAST container_Check
			matchre get.Box ^\.\.\.wait|^Sorry, you may only type
			matchre return You get|You are already
			matchre container_Check ^What were you
		send get my %disarmit from my %container
		matchwait

weapon:
     var LAST WEAPON
     pause 0.2
     pause 0.1
     pause 0.1
     matchre weapon ^\.\.\.wait|^Sorry, you may only type
     matchre stow_Weapon You
     matchre weapon1 Remove what?
     put remove %knuckles
	matchwait
weapon1:
	var LAST weapon1
	matchre weapon1 ^\.\.\.wait|^Sorry, you may only type
	matchre stow_Weapon You|Remove
     put remove handwrap
	matchwait
stow_Weapon:
	var LAST stow_Weapon
	matchre stow_Weapon ^\.\.\.wait|^Sorry, you may only type
	matchre stow_Weapon2 There isn't any more room
     matchre SAVE ^You|Stow
	put stow %knuckles;stow handwrap
	matchwait
stow_Weapon2:
	var LAST stow_Weapon2
	matchre stow_Weapon2 ^\.\.\.wait|^Sorry, you may only type
	matchre SAVE ^You|Stow
	put stow %knuckles in %container1;stow handwr in %container1
	matchwait 5
     goto %SAVE

glance_box:
	var LAST glance_box
     var failcount 0
     pause 0.0001
	send glance my $lefthandnoun
	pause 0.2
	pause 0.1
     pause 0.0001
	RETURN

disarm_ID:
     var SAVE disarm_ID
	var LAST disarm_ID
	var disarm.count 0
     var harvest.count 0
     pause 0.0001
     pause 0.0001
	pause 0.1
     pause 0.1
     matchre ID_FAIL ^You get the distinct feeling your careless|This is not likely to be a good
	matchre disarm_ID ^\.\.\.wait|^Sorry, you may only type
     matchre Not_Box ^You don't see any reason to attempt to disarm that
	matchre weapon hinders your attempt|knuckles|handwraps|hand claws
	matchre disarm_ID fails to reveal to you|^You are still stunned
	matchre HEALTH You're in no shape
	matchre RETURN You guess it is already disarmed|Surely any fool|Even your memory can not be that short|Roundtime|Somebody has already located
	#matchre return coffer|trunk|chest|strongbox|skippet|caddy|crate|casket|box
	send disarm ID
	matchwait

Not_Box:
     echo *** Error: Not a trapped box: $lefthand
     pause
     put open my %gempouch.container
     pause 0.5
     put put $lefthandnoun in my %gempouch.container
     pause 
     pause 0.5
     put close my %gempouch.container
     pause 0.5
     goto container_Check

ID_FAIL:
     var failcount add 1
     if (%failcount > 4) then goto toss_box
     pause 0.3
     goto disarm_ID

disarm:
	var multi_trap OFF
	if matchre("%trap_type", "(concussion|disease|reaper|shrapnel|gas|lightning)") && ($roomid != %SAFE.ROOM) && (toupper(%MOVE.ROOMS) = "YES") then gosub automove %SAFE.ROOM
disarmIt_Cont:
    var SAVE disarmIt_Cont
	var LAST disarmIt_Cont
	math disarm.count add 1
    pause 0.0001
    pause 0.0001
	pause 0.1
	pause 0.1
	if (%disarm.count > 9) then goto toss_Box
     if ("%total_difficulty" >= "14") then goto toss_Box
     if ("%trap_type" = "concussion") && (%disarm.count > 4) then goto toss_Box
     if ("%trap_type" = "shrapnel") && (%disarm.count > 4) then goto toss_Box
     if ("%trap_type" = "concussion") && ("%total_difficulty" > "11") then goto toss_Box
     if ("%trap_type" = "shrapnel") && ("%total_difficulty" > "11") then goto toss_Box
	if (%disarm.count > 3) then var mode careful
	if ((%disarm.count > 2) && ("%mode" = "quick")) then var mode normal
		matchre disarmIt_Cont ^\.\.\.wait|^Sorry, you may only type
		matchre weapon hinders your attempt|knuckles|handwraps|hand claws
		matchre disarmIt_Cont ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre disarmIt_Careful This is not likely to be a good thing|You get the distinct feeling your manipulation caused something to shift inside the trap mechanism
		matchre disarmIt_Cont fumbling fails to disarm|unable to make any progress|You doubt you'll be this lucky every time
		matchre return You are certain the %disarmit is not trapped|Roundtime|You guess it is already disarmed|DISARM HELP for syntax help|It looks safe enough|^You don't see any reason
	put disarm my %disarmit %mode
	matchwait
disarmIt_Careful:
	math disarm.count add 2
     math total_difficulty add 1
	goto disarmIt_Cont

analyze:
	var LAST analyze
	math harvest.count add 1
     pause 0.0001
     pause 0.0001
	pause 0.1
     pause 0.1
	if (%harvest.count > 2) then goto RETURN
	    matchre weapon knuckles|handwraps
		matchre analyze ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre analyze You are unable to
		matchre harvest You already have made an extensive study|You are certain the %disarmit is not trapped|Roundtime|You guess it is already disarmed|DISARM HELP for syntax help
		matchre return fumbling fails to disarm|This is not likely to be a good thing|You've already analyzed this trap
		matchre disarm what could you possibly analyze
	put disarm anal
	matchwait

harvest:
	var LAST harvest
	math harvest.count add 1
     pause 0.0001
     pause 0.0001
	pause 0.1
     pause 0.1
	if (%harvest.count > 4) then goto RETURN
		matchre harvest ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre disarm_ID what could you possibly analyze
		matchre return It appears that none of the trap components are accessible|been completely harvested|unsuitable for harvesting|You don't see any reason
		matchre harvest Your laborious fumbling fails to harvest the trap component|You fumble
		matchre stow_Component Roundtime
	put disarm harvest
	matchwait

stow_Component:
	pause 0.5
     pause 0.2
     pause 0.5
	if ("$righthandnoun" = "cube") then send put cube in my %container1
     if (toupper("%keepcomponent") = "YES") then
          {
               if matchre("$righthand", "(%component_list)") then gosub stow_It $0
          }
     if ("$righthand" != "Empty") then
		{
			put empty right hand
			pause 0.5
		}
	goto return

stow_It:
	var component $0
	pause 0.5
	stow_Comp:
		var LAST stow_Comp
			matchre stow_It ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
			matchre return ^You put
               matchre stow_ItAlt any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide|not designed to carry anything|^But that's closed
		put put %component in my %componentcontainer
		matchwait
stow_ItAlt:
     put put %component in my %container1
     pause 0.5
     RETURN

get_Pick:
	pause 0.5
	var LAST get_Pick
		matchre get_Pick ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre return You get|You are already
		matchre no_More_Picks What were you referring to
	put get my lockpick
	matchwait

pull_Pick:
	pause 0.5
	var LAST pull_Pick
		matchre pull_Pick ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre return ^You get|^You are already|^You pull
		matchre get_Pick ^What were you referring to|^But there aren't any lockpicks
	put pull my lockpick ring
	matchwait

no_More_Picks:
	echo
	echo ***  You have no more lockpicks - TIME TO RESTOCK! ***
	echo
	put #echo >Log Fuchsia *** You have run out of lockpicks! Restock! ***
	goto LOCKED.SKILLS

put_Away_Pick:
	var LAST put_Away_Pick
	if ("$righthand" = "Empty") then return
	pause 0.5
		matchre loot It's not even locked
		matchre put_Away_Pick ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre return You put|What were you
		matchre pick.storage2 There isn't any more room|That's too heavy|^I could not|heavy
	put put lockpick in my %pickstorage
	matchwait

pick.storage2:
	var LAST pick.storage2
	if ("$righthand" = "Empty") then return
		matchre pick.storage2 ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre return You put|What were you
	put put lockpick in my %container1
	matchwait

pick_ID:
	var LAST pick_ID
	var SAVE pick_ID
	var pickloop 0
     pause 0.001
     if ((toupper("%lockpick.ring") != "YES") && ("$righthand" = "Empty")) then gosub get_Pick
	pause 0.1
	pause 0.1
		matchre pick_ID ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre weapon hinders your attempt|knuckles|handwraps|hand claws
		matchre disarm_ERROR is not fully disarmed
		matchre pick_ID fails to teach you anything about the lock guarding it|just broke
		matchre return Somebody has already inspected|not even locked|Roundtime|^Pick what
		matchre get_Pick Find a more appropriate tool
	put pick ID
	matchwait

pick:
	var LAST pick
	var SAVE pick
	var multi_lock OFF
     pause 0.001
	pause 0.1
	pause 0.1
		matchre pick ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre weapon hinders your attempt|knuckles|handwraps|hand claws
		matchre pick_Cont Roundtime|has already helpfully been analyzed|not even locked|^Pick what
	put pick anal
	matchwait
pick_Cont:
	if ((toupper("%lockpick.ring") != "YES") && ("$righthand" = "Empty")) then gosub get_Pick
	var LAST pick_Cont
	var SAVE pick_Cont
	math pickloop add 1
     pause 0.001
	pause 0.1
	pause 0.3
	if (%pickloop > 15) then goto toss_Box
	if (%pickloop > 6) then var mode careful
	if ((%pickloop > 2) && ("%mode" = "quick")) then var mode normal
	if ((%pickloop > 2) && ("%mode" = "blind")) then var mode quick
		matchre pick_Cont ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre weapon hinders your attempt|knuckles|handwraps|hand claws
		matchre pick_cont You are unable to make
		matchre get_Pick Find a more appropriate tool
		matchre return With a soft click|not even locked|Roundtime|^Pick what
	put pick %mode
	matchwait

toss_Box:
     echo
     echo *** THIS BOX IS EITHER WAY TOO HARD FOR US
     echo *** AND/OR IS A DEADLY TRAP LIKELY TO KILL US!
     echo *** DISCARDING FOR SAFETY!!
     echo
     pause 0.5
     pause 0.4
	var LAST toss_Box
     var failcount 0
return_Box:
     if (toupper("%GIVEBOX") = "YES") then
          {
               if ("$righthand" = "Empty") then send swap
               pause 0.5
               pause 0.3
               put whisper %user Sorry, this box is way too hard for me, I can't open it
               put give %user
               matchre main accepts
               matchre return_Box canceled
               matchwait 30
               goto return_Box
          }
     matchre toss_Box ^\.\.\.wait|^Sorry, you may only type
	matchre main ^You|As you
	if matchre("$roomobjs","bucket of viscous gloop") then put put my %disarmit in bucket
     if matchre("$roomobjs","(waste bin|firewood bin)") then put put my %disarmit in bin
     if matchre("$roomobjs","driftwood log") then put put my %disarmit in log
     if matchre("$roomobjs","tree hollow") then put put my %disarmit in hollow
	put drop my %disarmit
	matchwait

loot:
open_Box:
	var LAST open_Box
     pause 0.001
	pause 0.1
	pause 0.3
		matchre loot ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre get_Gem_Pouch open
		matchre pick_ID It is locked
	put open my %disarmit
	matchwait
get_Gem_Pouch:
	var LAST get_Gem_Pouch
     if (toupper("%gempouchWorn") = "YES") then goto fill_Gem_Pouch
     if ("$righthand" != "Empty") then GOSUB STOW right
     pause 0.001
     pause 0.001
	pause 0.3
		matchre get_Gem_Pouch ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre fill_Gem_Pouch You get|^But that is
          matchre out_of_pouches ^What were you|^I could not find
	put get my %gempouch
	matchwait
fill_Gem_Pouch:
	var LAST fill_Gem_Pouch
     pause 0.001
	pause 0.001
	pause 0.3
		matchre tied_Pouch The gem pouch is too valuable|You'll need to tie it up
		matchre fill_Gem_Pouch ^\.\.\.wait|^Sorry, you may only type|^You are still stunned
		matchre stow_Pouch You take|any gems|You fill your|You open your|You have to be holding
		matchre full_Pouch anything else|pouch is too full
	put fill my %gempouch with my %disarmit
	matchwait

tied_Pouch:
	var LAST tied_Pouch
		matchre non_gems You'll need to make sure there are only gems in there
		matchre fill_Gem_Pouch You tie up|has already been tied off
	put tie %gempouch
	matchwait 10
	goto fill_Gem_Pouch
full_Pouch:
	var LAST full_Pouch
     echo *** FILLED UP A GEM POUCH. STASHING IN %gempouch.container
	pause 0.5
     if (toupper("%gempouchWorn") = "YES") then
          {
          put rem my %gempouch
          pause 0.8
          }
	put open my %gempouch.container
     pause 0.2
	put put my %gempouch in my %gempouch.container
	pause 0.5
	pause 0.5
	put close my %gempouch.container
	pause 0.5
     pause 0.3
	put get my %gempouch
     if (toupper("%gempouchWorn") = "YES") then put wear my %gempouch
     pause 0.5
	goto fill_Gem_Pouch

non_gems:
	GOSUB STOW left
	put get inf stone from %gempouch
	put stow stone
	pause 0.5
     pause 0.3
	put get pot cry from %gempouch
	put stow cry
	pause 0.5
     pause 0.3
	put get ach cry from %gempouch
	put stow cry
	pause 0.5
     pause 0.3
	put get rune from %gempouch
	put drop rune
	pause 0.5
     pause 0.3
	put get stone from %gempouch
	put drop stone
	pause 0.5
     pause 0.3
	put get nugg from %gempouch
	put drop nugg
	pause 0.5
     pause 0.3
	put get stone from %gempouch
	put drop stone
	pause 0.5
     pause 0.3
     put get my %disarmit
     pause 0.5
	goto tied_Pouch

stow_Pouch:
	var LAST stow_Pouch
		matchre stow_Pouch ^\.\.\.wait|^Sorry, you may only type
		matchre stow_Pouch2 any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide
		matchre get_Coin You|Stow|^But that is
	put stow my %gempouch
	matchwait
stow_Pouch2:
	var LAST stow_Pouch2
		matchre stow_Pouch3 any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide
		matchre stow_Pouch2 ^\.\.\.wait|^Sorry, you may only type
		matchre get_Coin You|Stow|^But that is
	put stow my %gempouch in my bag
	matchwait
stow_Pouch3:
	var LAST stow_Pouch3
		matchre stow_Pouch3 ^\.\.\.wait|^Sorry, you may only type
		matchre get_Coin You|Stow|^But that is
	put stow my %gempouch in my rucksack
	matchwait

get_Coin:
	var LAST get_Coin
		matchre get_Coin ^\.\.\.wait|^Sorry, you may only type
		matchre get_Coin You pick up
		matchre map_Check What were you
	put get coin from my %disarmit
	matchwait

map_Check:
	var LAST map_Check
		matchre stow_Gear gear|bolt|nut|glarmencoupler|spangleflange|rackensprocket|flarmencrank
		matchre get_Map map|treasure map|Treasure map
          matchre get_ingot ingot
		matchre return In the|nothing|What
	put look in my %disarmit
	matchwait

stow_Gear:
	var LAST stow_Gear
	pause 0.1
	put get gear from my %disarmit
	put get bolt from my %disarmit
	pause 0.5
	put get nut from my %disarmit
	pause 0.5
	put stow
	pause 0.1
	put get flarm from my %disarmit
	put get spang from my %disarmit
	pause 0.5
	put stow
	pause 0.1
	put get glarm from my %disarmit
	put get rack from my %disarmit
	pause 0.5
	put stow
	pause 0.1
	goto dismantle

get_Map:
	var LAST get_Map
	put get map from my %disarmit
	put stow map
	pause 0.5
	put #echo >Log Lime ***** FOUND TREASURE MAP IN BOX *****
	RETURN

get_ing:
     put get ingot from my %disarmit
     put stow ingot
     pause 0.5
     GOTO map_Check

dismantle:
	var LAST dismantle
     pause 0.1
	if matchre("$roomobjs","bucket of viscous gloop") then put put my %disarmit in bucket
     if matchre("$roomobjs","(waste bin|firewood bin)") then put put my %disarmit in bin
     if matchre("$roomobjs","driftwood log") then put put my %disarmit in log
     if matchre("$roomobjs","tree hollow") then put put my %disarmit in hollow
     pause 0.2
     pause 0.1
     if ("$righthand" = "Empty") && ("$lefthand" = "Empty") then return
		matchre dismantle ^\.\.\.wait|^Sorry, you may only type
          matchre dismantle next 15 seconds|something inside it
          matchre drop_box You can not dismantle
		matchre open_Box You must first open
		matchre disarm_sub You must first disarm
		matchre return Roundtime|Unable to locate|^Dismantle what\?
	put disman my %disarmit %dismantle
	matchwait

drop_box:
     pause 0.1
     put drop my %disarmit
     pause 0.2
     pause 0.2
     RETURN

stowDisarmed:
     pause 0.1
     echo *** STOWING DISARMED BOX AWAY
     send put my %disarmit in %disarmBag
     pause 0.5
     goto MAIN

empty.hand:
     pause 0.1
	if ("$righthand" != "Empty") then GOSUB STOW right
	if ("$lefthand" != "Empty") then GOSUB STOW left
fix_Lock:
	if (toupper("%lockpick.ring") != "YES") then gosub get_Pick
	if (toupper("%lockpick.ring") = "YES") then gosub fix_Ring
	if (toupper("%lockpick.ring") = "YES") then goto go_On
	fixing:
	var LAST fixing
		pause 0.5
		matchre fix_Ring You'll have to hold it|You can't fix that
		matchre fixing ^\.\.\.wait|^Sorry, you may only type
		matchre go_On Roundtime|look like it
	put fix my lock
	matchwait
	go_On:
	if (toupper("%lockpick.ring") != "YES") then gosub put_Away_Pick
	return

fix_Ring:
	fixing.ring:
	var LAST fixing.ring
		pause 0.5
		matchre GET.HEALED.RING ^You're in no condition to be repairing
		matchre empty.hand You must use both hands
		matchre fixing.ring ^\.\.\.wait|^Sorry, you may only type
		matchre return Roundtime|look like it|^You can't figure out how to fix that
	put repair my lockpick %lockpick.ring.type
	matchwait 20
	goto EMPTY.RING

GET.HEALED.RING:
     echo
     echo *** You are too hurt to repair anything! Get healed!
     echo
RETURN

EMPTY.RING:
     var lockpick.ring NO
     echo
     echo *** Your lockpick ring is empty! Refill it!
     echo
     put #echo >Log Red Lockpick ring empty!!! REFILL IT!
     goto go_On

exp_Check:
	put exp
	waitfor Overall state of mind
	if ("$righthand" != "Empty") then send stow right
    ##################
	#BOX COUNTER HERE!
	var LOCAL $Boxes
	math LOCAL add 1
	math BOXES add 1
	put #var Boxes %LOCAL
	echo
	echo **** Boxes popped: %BOXES
	echo
     #END BOX COUNTER
	##################
	if (toupper("%keep.picking") != "YES") then
          {
          if ($Locksmithing.LearningRate > 33) then goto LOCKED.SKILLS
          }
	return

exp_Pause:
	pause 0.5
	if ($Perception.LearningRate > 32) then
	{
		pause 30
		goto exp_Check
	}
     elseif ("$righthand" = "Empty") then put get my $JUGGLIE
JUGGLE:
     pause 0.5
	matchre JUGGLE ^\.\.\.wait|^Sorry, you may only type
	matchre exp_Check Roundtime
	put rub orb
	send juggle my $JUGGLIE
	pause 2
	pause
	send juggle my $JUGGLIE
	pause 2
	pause
	send juggle my $JUGGLIE
	pause 2
	pause
	send juggle my $JUGGLIE
	matchwait

lockpick.ring.check:
     pause 0.1
     pause 0.001
     matchre type.ring ^You tap (.+) you are wearing
     matchre lockpick.ring.type2 ^I could not|^What|^You tap
     send tap my l ring
     matchwait 3
     goto lockpick.ring.type2
type.ring:
     var lockpick.ring.type lockpick ring
     goto fill.lockpick.ring
lockpick.ring.type2:
     pause 0.1
     pause 0.001
     matchre type.case ^You tap (.+) you are wearing
     matchre lockpick.ring.type3 ^I could not|^What
     send tap my l case
     matchwait 3
lockpick.ring.type3:
	 pause 0.1
     pause 0.001
     matchre type.key ^You tap (.+) you are wearing
     matchre lockpick.ring.type4 ^I could not|^What
     send tap my key
     matchwait 3
lockpick.ring.type4:
	 pause 0.1
     pause 0.001
     matchre type.anklecuff ^You tap (.+) you are wearing
     matchre lockpick.ring.type5 ^I could not|^What
     send tap my ankle-cuff
     matchwait 3
lockpick.ring.type5:
	 pause 0.1
     pause 0.001
     matchre type.wristcuff ^You tap (.+) you are wearing
     matchre no.ring ^I could not|^What
     send tap my lockpick wristcuff
     matchwait 3
no.ring:
     var lockpick.ring NO
     RETURN
type.case:
     var lockpick.ring.type lockpick case
     goto fill.lockpick.ring
type.key:
	var lockpick.ring.type golden key
	goto fill.lockpick.ring
type.anklecuff:
	var lockpick.ring.type ankle-cuff
	goto fill.lockpick.ring
type.wristcuff:
	var lockpick.ring.type lockpick wristcuff
	goto fill.lockpick.ring

fill.lockpick.ring:
     pause 0.1
     matchre new.lock hold an additional
     matchre RETURN appears to be full|It looks
     matchre NO.PICKS empty
     put glance my %lockpick.ring.type
     matchwait
new.lock:
     pause 0.1
     pause 0.1
     matchre make.more.locks ^What were you|^I could not find
     matchre put.lock ^You get|already holding|^You need a free
     put get my lockpick
     matchwait
put.lock:
     pause 0.1
     matchre fill.lockpick.ring ^You put
     matchre stow.lock ^You don't think you should put different kinds|already has as many lockpicks|^What
     put put my lock in my lock %lockpick.ring.type
     matchwait
stow.lock:
     put stow lock
     pause 0.1
     RETURN
make.more.locks:
     put #echo >Log Orange ******** Running low on lockpicks! Make more! *************
     RETURN

disarm_ERROR:
	echo
	echo Error while opening box
	echo Something bad happened
	echo
	put #beep
	GOSUB STOWING
	pause 1
	goto TOP
NO.PICKS:
EMPTY:
     put #echo >Log Red *** RAN OUT OF LOCKPICKS!!! RESTOCK!
     goto LOCKED.SKILLS
out_of_pouches:
     put #echo >Log Red *** RAN OUT OF GEM POUCHES! RESTOCK!!!
LOCKED.SKILLS:
     echo
     echo *** FINISHED PICKING BOXES!
     echo
     put #echo >Log Aqua *** Finished Boxes - Locksmithing: $Locksmithing.Ranks $Locksmithing.LearningRate / 34 ***
     put #echo >Log Aqua *** %BOXES boxes popped this session
     put #echo >Log Aqua *** $Boxes boxes popped over all time
done:
     pause 0.1
     #send dump junk
     pause 0.5
     GOSUB STOWING
     pause 0.1
     if (toupper("%wear.armor") = "YES") then GOSUB WEAR.ARMOR
     put get my %knuckles
     put wear my %knuckles
     wait
     pause 0.5
     pause 0.2
     GOSUB STOWING
     echo *** DONE PICKING BOXES!
     put #parse DONE PICKING BOXES
     put #parse DONE PICKING BOXES!
     exit
SAVE:
     pause 0.2
     pause 0.1
     goto %SAVE
####################################################################
#  BLOWN TRAPS HANDLING SECTION
# THIS SECTION TELLS THE SCRIPT WHAT TO DO WHEN YOU BLOW A TRAP
####################################################################
BLOWN.TRAP.PAUSE:
     pause 5
BLOWN.TRAP:
     pause 0.5
     if $stunned = 1 then goto BLOWN.TRAP.PAUSE
     put #echo >Log Red ** Blew a %trap_type trap!
     echo
     echo *** Blew up a %trap_type trap!!
     echo *** Assessing the situation...
     echo ***
     echo
     pause 0.1
     if %trap_type = "fire_ant" then goto FIREANT.TRAP
     if %trap_type = "acid" then goto ACID.TRAP
     if %trap_type = "cyanide" then goto DART.TRAP
     if %trap_type = "bolt" then goto BOLT.TRAP
     if %trap_type = "poison_bolt" then goto BOLT.TRAP
     if %trap_type = "flea" then goto FLEA.TRAP
     if %trap_type = "bouncer" then goto BOUNCER.TRAP
     if %trap_type = "curse" then goto CURSE.TRAP
     if %trap_type = "frog" then goto FROG.TRAP
     if %trap_type = "laughing" then goto LAUGHING.TRAP
     if %trap_type = "mana_sucker" then goto MANA.TRAP
     if %trap_type = "mime" then goto MIME.TRAP
     if %trap_type = "shadowling" then goto SHADOWLING.TRAP
     if %trap_type = "sleeper" then goto SLEEPER.TRAP
     if %trap_type = "reaper" then goto REAPER.TRAP
     if %trap_type = "poison_nerve" then goto POISON.PAUSE
     if %trap_type = "poison_local" then goto POISON.PAUSE
     if %trap_type = "concussion" then goto HEALTH
     if %trap_type = "disease" then goto HEALTH
     if %trap_type = "gas" then goto HEALTH
     if %trap_type = "lightning" then goto HEALTH
     if %trap_type = "naphtha_soaker" then goto HEALTH
     if %trap_type = "scythe" then goto HEALTH
     if %trap_type = "shocker" then goto HEALTH
     if %trap_type = "boomer" then goto HEALTH
     if %trap_type = "shrapnel" then goto HEAL.DELAY
     if %trap_type = "naphtha" then goto HEAL.DELAY
     goto HEALTH

BOUNCER.TRAP:
     echo
     echo *** BLEW A BOUNCER TRAP! FUCK IT! LET IT GO...
     echo *** RESETING SCRIPT IN 5....
     echo
     pause 5
     gosub stow
     goto TOP

MANA.TRAP:
     echo
     echo *** BLEW A MANA ZAPPER TRAP
     if ($Guild = Thief") then
          {
          echo *** NOTHING TO WORRY ABOUT! NO MANA FTW HAHA
          }
     if ($Guild != Thief") then
          {
          echo *** OH WELL......
          }
     echo
     pause 4
     gosub stow
     goto TOP

MIME.TRAP:
     pause 0.1
     echo
     echo *** BLEW A MIME TRAP!
     echo *** GOOD JOB DUMBASS! NOW YOU HAVE TO WAIT!
     echo
     pause 0.1
     put dance hap
     waitfor You suddenly feel nauseous
     gosub stow
     goto TOP

CURSE.TRAP:
     echo
     echo *** BLEW A CURSE TRAP!
     echo *** WAITING FOR IT TO WEAR OFF
     echo *** OR GET A CLERIC TO UNCURSE!
     echo
     matchre DONE.CURSE ^The eerie black radiance fades
     put 'help! I'm cursed.. any clerics?
     pause 100
     goto CURSE.TRAP
DONE.CURSE:
     pause 0.5
     goto TOP

FROG.TRAP:
     echo
     echo *** BLEW A FROG TRAP!
     echo *** NEED TO GET KISSED OR JUST WAIT IT OUT!
     echo
     pause 2
     put 'Help.. I'm a frog! Someone kiss me please!
     waitfor puff of green smoke
     goto TOP

SLEEPER.TRAP:
     echo
     echo *** BLEW A SLEEPER TRAP!
     echo *** WAKING UP AUTOMATICALLY
     echo *** DO NOT TOUCH THE KEYBOARD FOR 30 SECONDS!!!!
     echo
     pause 2
     echo
     echo *** I'M FUCKING SERIOUS DON'T TOUCH ANY KEYS
     echo
SLEEP.WAKE:
     put wake
     pause 33
     gosub stand
     pause 0.5
     if $standing = 1 then goto TOP
     if $standing = 0 then
          {
               echo *** I TOLD YOU NOT TO TYPE ANYTHING DUMBASS!!!
               echo *** RESTARTING... DO NOT FUCKING TYPE!!!!
          }
     goto SLEEP.WAKE

LAUGHING.TRAP:
     echo
     echo *** BLEW A LAUGHING GAS TRAP!
     echo *** PAUSING...
     echo
     pause 60
     put look
     pause 30
     if $standing = 0 then gosub stand
     goto TOP

SHADOWLING.TRAP:
     echo
     echo *** BLEW A SHADOWLING TRAP
     echo *** YOU'RE SPEAKING SHADOWLING FOR A FEW MINUTES
     echo *** GOING BACK TO BUSINESS AS USUAL..
     echo
     pause 5
     gosub stow
     goto TOP

FLEA.TRAP:
     action remove you realize it was actually a swarm of fleas|You notice a single flea leap off of your|Something tickles under your arm
     echo
     echo *** BLEW A FLEA TRAP!
     echo *** RUNNING FOR WATER!
     echo
     pause 0.5
     ########## EDIT THIS SECTION TO MOVE TO WATER
     if $zoneid = 1 then GOSUB automove NTR
     if $zoneid = 7 then GOSUB automove 551
     if $zoneid = 67 then GOSUB automove north
     if $zoneid = 66 then GOSUB automove 153
     if $zoneid = 30 then GOSUB automove 176
     if $zoneid = 42 then GOSUB automove 102
     if $zoneid = 61 then GOSUB automove pool
     if $zoneid = 40 then GOSUB automove 49
     if $zoneid = 90 then GOSUB automove 342
     if $zoneid = 99 then GOSUB automove 270
     ########## EDIT THIS SECTION TO MOVE TO WATER
     echo **** FOUND WATER!
     action goto FLEA.LEAVE when The water washes away the fleas
     pause 10
FLEA.LEAVE:
     action remove The water washes away the fleas
     put splash
     echo **** PAUSING FOR 20+ MORE SECONDS TO MAKE SURE THOSE FUCKING FLEAS ARE GONE!
     pause 10
     put splash
     pause 2
     ######### RETURN TO YOUR STARTING LOCATION
     pause 0.5
     if $zoneid = 7 then GOSUB automove Crossing
     if $zoneid = 66 then GOSUB automove shard
     GOSUB automove %STARTING.ROOM
     pause 0.5
     goto TOP

FIREANT.TRAP:
     var FIREANT ON
     pause
     pause 0.5
     if $stunned = 1 then goto FIREANT.TRAP
     ########## EDIT THIS SECTION TO MOVE TO WATER
     if $zoneid = 1 then GOSUB automove NTR
     if $zoneid = 7 then GOSUB automove 551
     if $zoneid = 67 then GOSUB automove north
     if $zoneid = 66 then GOSUB automove 153
     if $zoneid = 30 then GOSUB automove 176
     if $zoneid = 42 then GOSUB automove 102
     if $zoneid = 61 then GOSUB automove pool
     if $zoneid = 40 then GOSUB automove 49
     if $zoneid = 90 then GOSUB automove 342
     if $zoneid = 99 then GOSUB automove 270
     ########## PAUSING FOR ANTS!!
     pause 15
     put splash
     pause 7
     ######### RETURN TO YOUR STARTING LOCATION
     pause 0.5
     if $zoneid = 7 then GOSUB automove Crossing
     if $zoneid = 66 then GOSUB automove shard
     GOSUB automove %STARTING.ROOM
     GOTO HEALTH

TELEPORT_OK:
     pause 5
     if $stunned = 1 then goto TELEPORT_OK
     put #echo >Log Lime ** Blew a teleport trap and lived!!!! You lucky bitch!
     echo
     echo *** BLEW A TELEPORT TRAP AND LIVED!!!!
     echo *** YOU ARE NOW SOMEWHERE IN ELANTHIA! FIND YOUR WAY HOME!
     echo *** ENDING DISARM SCRIPT... AND HOPEFULLY RECOVERING.....
     echo
     put #parse YOU HAVE BEEN IDLE
     pause
     put #script abort disarm
     exit

TELEPORT_DEATH:
     put #echo >Log Red ** Blew a bad teleport trap and DIED! FAIL!
     echo
     echo *** BLEW A TELEPORT TRAP AND DIED!! UBER FAIL!!
     echo *** YOU ARE DEAD! BETTER LUCK NEXT TIME!
     echo *** RAISE THE DIFFICULTY ON THE BASELINE VARIABLE IF THIS HAPPENS TO YOU TOO MUCH!!
     echo
     put #script abort
     put .alert
     exit

CONCUSSION_DEATH:
     put #echo >Log Red ** Death via concussion trap! Ouch.
     echo
     echo *** BLEW A CONCUSSION TRAP AND DIED!
     echo
DIED:
DIED.TRAP:
     put #echo >Log Red ** FUCKING PWNED BY A BOX!
     echo
     echo *** DIED!! FAIL!!
     echo *** LOGGING OFF!
     echo
     pause
     put health
     put #script abort
     exit

BOLT.TRAP:
     pause $roundtime
     pause 0.2
          if contains("$roomobjs","driftwood log") && ("$righthand" = "crossbow bolt") || ("$lefthand" = "crossbow bolt") then
          {
          put put my bolt in log
          pause 0.1
          }
     if "$righthandnoun" = "bolt" then send drop bolt
     if "$lefthandnoun" = "bolt" then send drop bolt
     gosub stow
     pause 0.5
     gosub BLEEDCHECK
     gosub BLEEDCHECK
     pause 0.5
     BOLT.CONT:
     goto HEALTH

DART.TRAP:
     pause 0.1
     echo
     echo *** BLEW A CYANIDE TRAP
     echo
     pause
     gosub stow
     pause 0.5
     put tend my head
     gosub pausez
     put drop dart
     pause
     CYANIDE.PAUSE:
     echo Waiting for cyanide to wear off....
     pause 60
     goto HEALTH

ACID.TRAP:
     gosub pausez
     var ACID.TRAP ON
     echo
     echo *** WAITING FOR THE ACID TO TAKE FULL EFFECT THEN GETTING HEALED!
     echo
     if %health > 50 then goto HEALTH
     pause 10
     ACID.CHECK:
     matchre ACID.TRAP is being burned|acid
     matchre HEALTH You have no|You have some|Your spirit|Your body
     put health
     matchwait 10
     goto HEAL.DELAY

REAPER.TRAP:
     send stow left
     pause 0.5
     echo *******************************************************
     echo * YOU BLEW A REAPER TRAP! GONNA PUNCH THOSE FUCKERS!
     echo * MIGHT WANT TO RUN AWAY IF YOU ARE A NOOB..
     echo *******************************************************
     pause 0.5
     send face next
     send adv
     pause
     send kick
     pause 0.5
     pause 0.5
     put punch
     pause 0.5
     put kick
     pause 0.5
     pause 0.5
     put punch
     pause 0.5
     pause 0.5
     put att
     pause
     pause 0.5
     put att
     pause
     if $monstercount > 0 then goto REAPER.TRAP
     goto HEALTH

POISON.PAUSE:
     pause 30
POISONED:
     if $health < 75 then goto HEALTH
     if ("$Guild" != "Thief") then goto HEALTH
     echo
     echo *** Got Posioned but toughing it out.. you're a damn thief anyway!
     echo
     goto DONE.HEAL
###########################
# HEALING SECTION
###########################
HEAL.DELAY:
     ECHO ** PAUSING BEFORE GETTING HEALED!!
     pause 20
HEAL.PAUSE:
     pause 10
HEALTH:
     put #echo >Log Yellow **** Blew a box! Getting healed!
     pause 0.5
     gosub HEALTH_CHECK
     if ($needHealing) then goto TO.AUTOEMPATH
     else goto DONE.HEAL
     return

HEALTH.CHECKZ.PAUSE:
     echo ** STUNNED! waiting for it to wear off..
     pause 2
     pause
     goto HEALTH.CHECKZ
TO.AUTOEMPATH:
TO.AUTOHEALER:
EMPATH.CHECK:
HEALTH.CHECKZ:
     pause 0.5
     if $stunned = 1 then goto HEALTH.CHECKZ.PAUSE
     echo
     echo *** YOU HAVE BEEN HURT BY A BOX!
     echo *** FINDING HEALER!
     echo
	 put #beep
	 echo >ScriptLog Injured by box
	 exit
     if $standing = 0 then gosub stand
     goto NO.EMPATHS
NO.EMPATHS:
GO.AUTOHEALER:
     if $zoneid = 7 then gosub automove cross
     if $zoneid = 66 then gosub automove east
     action goto AUTOPATH.LEAVE when crosses $charactername's name from the list|^Shalvard says, "Please get up|Shalvard looks around and says, "Kindly leave|Yolesi suddenly yells|^Kaiva crosses your name off|you look fine and healthy to me|^You sit up|^Arthianne nudges you|I think you don't really need healing|you are well|Quentin whispers, "Just between you and me and the Queen
     gosub automove healer
     pause 0.5
     put lie
     send join list
     pause

AUTOPATH.WAIT:
     if $sitting = 1 then goto AUTOPATH.LEAVE
     pause 30
     if $sitting = 1 then goto AUTOPATH.LEAVE
     pause 30
     if $sitting = 1 then goto AUTOPATH.LEAVE
     pause 30
     put exp
     goto AUTOPATH.WAIT
     
DONE.AUTOEMPATH:
     if $zoneid = 69 then gosub automove shard
     if $zoneid = 68 then gosub automove shard
     if $zoneid = 66 then gosub automove shard
DONE.HEAL:
AUTOPATH.LEAVE:
     action remove crosses $charactername's name from the list|^Shalvard says, "Please get up|Shalvard looks around and says, "Kindly leave|Yolesi suddenly yells|^Kaiva crosses your name off|you look fine and healthy to me|^You sit up|^Arthianne nudges you|I think you don't really need healing|you are well|Quentin whispers, "Just between you and me and the Queen
     if $standing = 0 then gosub STAND
     pause 0.5
     gosub automove %STARTING.ROOM
     pause 0.5
     put #echo >Log Pink ** Got healed! Continuing Disarm..
     goto TOP

####################################################
# END TRAP HANDLING SECTION
####################################################


######################
# GOSUBS
######################
WEAR.ARMOR:
     if %total_armor = 0 then RETURN
     ECHO **** PUTTING YOUR ARMOR BACK ON! ****
     pause 0.5
     if "%armor1" != "null" then
          {
               ECHO *** ARMOR: %armor1 ***
               PUT get my %armor1
               pause 0.5
               PUT wear my %armor1
               pause 0.5
               pause 0.3
          }
     if "%armor2" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor2 ***
               PUT get my %armor2
               pause 0.5
               PUT wear my %armor2
               pause 0.5
               pause 0.3
          }
     if "%armor3" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor3 ***
               PUT get my %armor3
               pause 0.5
               PUT wear my %armor3
               pause 0.5
               pause 0.3
          }
     if "%armor4" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor4 ***
               PUT get my %armor4
               pause 0.5
               PUT wear my %armor4
               pause 0.5
               pause 0.3
          }
     if "%armor5" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor5 ***
               PUT get my %armor5
               pause 0.5
               PUT wear my %armor5
               pause 0.5
               pause 0.3
          }
     if "%armor6" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor6 ***
               PUT get my %armor6
               PUT wear my %armor6
               pause 0.5
               pause 0.3
          }
     if "%armor7" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor7 ***
               PUT get my %armor7
               pause 0.5
               PUT wear my %armor7
               pause 0.5
               pause 0.3
          }
     if "%armor8" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor8 ***
               PUT get my %armor8
               pause 0.5
               PUT wear my %armor8
               pause 0.5
               pause 0.3
          }
     if "%armor9" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor9 ***
               PUT get my %armor9
               pause 0.5
               PUT wear my %armor9
               pause 0.5
          }
     if "%armor10" != "null" then
          {
               gosub stowing
               ECHO *** ARMOR: %armor10 ***
               PUT get my %armor10
               pause 0.5
               PUT wear my %armor10
               pause 0.5
          }
     RETURN
#### HEALTH CHECKING
HEALTH_CHECK:
     delay 0.0001
     put #tvar needHealing 0
     delay 0.5
     matchre HEALTH_GOOD ^You have no significant injuries\.
     matchre HEALTH_BAD ^\s*Encumbrance\s+\:
     put -health;-2 encumbrance
     matchwait 15
     goto HEALTH_CHECK
HEALTH_BAD:
     delay 0.0001
     put #tvar needHealing 1
     delay 0.5
     RETURN
HEALTH_GOOD:
     delay 0.0001
     put #queue clear
     put #tvar needHealing 0
     delay 0.5
     RETURN
BLEEDCHECK:
BLEEDER.CHECK:
     delay 0.0001
     if "$righthandnoun" = "arrow" then put drop arrow
     if "$lefthandnoun" = "arrow" then put drop arrow
     if "$righthand" = "crossbow bolt" then put drop bolt
     if "$lefthand" = "crossbow bolt" then put drop bolt
     pause 0.001
     action goto BLEEDCHECK when The bandages binding your (.+) soak through with blood becoming useless and you begin bleeding again\.
     action var BLEEDING_HEAD YES when ^(?!.*\(tended\))\s*(head)\s{7}(.*)
     action var BLEEDING_NECK YES when ^(?!.*\(tended\))\s*(neck)\s{7}(.*)
     action var BLEEDING_CHEST YES when ^(?!.*\(tended\))\s*(chest)\s{7}(.*)
     action var BLEEDING_ABDOMEN YES when ^(?!.*\(tended\))\s*(abdomen)\s{7}(.*)
     action var BLEEDING_BACK YES when ^(?!.*\(tended\))\s*(back)\s{7}(.*)
     action var BLEEDING_R_ARM YES when ^(?!.*\(tended\))\s*r(?:ight|.) arm\s{7}(.*)
     action var BLEEDING_L_ARM YES when ^(?!.*\(tended\))\s*l(?:eft|.) arm\s{7}(.*)
     action var BLEEDING_R_LEG YES when ^(?!.*\(tended\))\s*r(?:ight|.) leg\s{7}(.*)
     action var BLEEDING_L_LEG YES when ^(?!.*\(tended\))\s*l(?:eft|.) leg\s{7}(.*)
     action var BLEEDING_R_HAND YES when ^(?!.*\(tended\))\s*r(?:ight|.) hand\s{7}(.*)
     action var BLEEDING_L_HAND YES when ^(?!.*\(tended\))\s*l(?:eft|.) hand\s{7}(.*)
     action var BLEEDING_L_EYE YES when ^(?!.*\(tended\))\s*l(?:eft|.) eye\s{7}(.*)
     action var BLEEDING_R_EYE YES when ^(?!.*\(tended\))\s*r(?:ight|.) eye\s{7}(.*)
     action var BLEEDING_SKIN YES when ^(?!.*\(tended\))\s*(skin)\s{7}(.*)
     action var BLEEDING_HEAD YES when lodged\s*.* into your head
     action var BLEEDING_HEAD YES when lodged\s*.* in your head
     action var BLEEDING_NECK YES when lodged\s*.* into your neck
     action var BLEEDING_NECK YES when lodged\s*.* in your neck
     action var BLEEDING_CHEST YES when lodged\s*.* into your chest
     action var BLEEDING_CHEST YES when lodged\s*.* in your chest
     action var BLEEDING_ABDOMEN YES when lodged\s*.* into your abdomen
     action var BLEEDING_ABDOMEN YES when lodged\s*.* in your abdomen
     action var BLEEDING_BACK YES when lodged\s*.* into your back
     action var BLEEDING_BACK YES when lodged\s*.* in your back
     action var BLEEDING_R_ARM YES when lodged\s*.* into your right arm
     action var BLEEDING_R_ARM YES when lodged\s*.* in your right arm
     action var BLEEDING_L_ARM YES when lodged\s*.* into your left arm
     action var BLEEDING_L_ARM YES when lodged\s*.* in your left arm
     action var BLEEDING_R_LEG YES when lodged\s*.* into your right leg
     action var BLEEDING_R_LEG YES when lodged\s*.* in your right leg
     action var BLEEDING_L_LEG YES when lodged\s*.* into your left leg
     action var BLEEDING_L_LEG YES when lodged\s*.* into your left leg
     action var BLEEDING_R_HAND YES when lodged\s*.* into your right hand
     action var BLEEDING_R_HAND YES when lodged\s*.* in your right hand
     action var BLEEDING_L_HAND YES when lodged\s*.* into your left hand
     action var BLEEDING_L_HAND YES when lodged\s*.* in your left hand
     action var BLEEDING_L_EYE YES when lodged\s*.* into your left eye
     action var BLEEDING_L_EYE YES when lodged\s*.* in your left eye
     action var BLEEDING_R_EYE YES when lodged\s*.* into your right eye
     action var BLEEDING_R_EYE YES when lodged\s*.* in your right eye
     action var POISON YES when ^You.+(poisoned)
     action var POISON YES when ^You.+(poisoned)
BLEEDYES:
     if "$righthandnoun" = "arrow" then send drop arrow
     if "$lefthandnoun" = "arrow" then send drop arrow
     if "$righthandnoun" = "bolt" then send drop bolt
     if "$lefthandnoun" = "bolt" then send drop bolt
     pause 0.0001
     echo [Checking for Bleeders]
     matchre yesbleeding Bleeding|arrow lodged|bolt lodged
     matchre END.OF.BLEEDER You pause a moment|^The THINK verb|THINK
     match bleedyes It's all a blur!
     put health;think
     matchwait 20
     echo [No bleeder found - exiting bleeder check]
     goto END.OF.BLEEDER
YESBLEEDING:
     echo **** HEALING BLEEDER ****
     if "%INFECTED" = "YES" then
     {
     echo *************************************
     echo **** WARNING ** YOU ARE INFECTED ****
     echo *************************************
     }
     if "%BLEEDING_HEAD" = "YES" then gosub tend head
     if "%BLEEDING_NECK" = "YES" then gosub tend neck
     if "%BLEEDING_CHEST" = "YES" then gosub tend chest
     if "%BLEEDING_ABDOMEN" = "YES" then gosub tend abdomen
     if "%BLEEDING_BACK" = "YES" then gosub tend back
     if "%BLEEDING_R_ARM" = "YES" then gosub tend right arm
     if "%BLEEDING_L_ARM" = "YES" then gosub tend left arm
     if "%BLEEDING_R_LEG" = "YES" then gosub tend right leg
     if "%BLEEDING_L_LEG" = "YES" then gosub tend left leg
     if "%BLEEDING_R_HAND" = "YES" then gosub tend right hand
     if "%BLEEDING_L_HAND" = "YES" then gosub tend left hand
     if "%BLEEDING_L_EYE" = "YES" then gosub tend left eye
     if "%BLEEDING_R_EYE" = "YES" then gosub tend right eye
     if "%BLEEDING_SKIN" = "YES" then gosub tend skin
     var BLEEDING_HEAD NO
     var BLEEDING_NECK NO
     var BLEEDING_CHEST NO
     var BLEEDING_ABDOMEN NO
     var BLEEDING_BACK NO
     var BLEEDING_R_ARM NO
     var BLEEDING_L_ARM NO
     var BLEEDING_R_LEG NO
     var BLEEDING_L_LEG NO
     var BLEEDING_R_HAND NO
     var BLEEDING_L_HAND NO
     var BLEEDING_L_EYE NO
     var BLEEDING_R_EYE NO
     var BLEEDING_SKIN NO
     goto END.OF.BLEEDER
TEND:
     var bleeder $0
     echo ***************************
     echo [Tending Bleeder: %bleeder]
     echo ***************************
     if $prone then gosub stand
tend_bleeder:
     send put tend my %bleeder
     pause 0.2
     pause 0.2
     pause 0.2
          if contains("$roomobjs","driftwood log") && ("$righthand" = "crossbow bolt") || ("$lefthand" = "crossbow bolt") then
          {
          put put my bolt in log
          pause 0.1
          }
     pause 0.2
     if "$righthandnoun" = "arrow" then put drop arrow
     if "$lefthandnoun" = "arrow" then put drop arrow
     if "$righthand" = "crossbow bolt" then put drop bolt
     if "$lefthand" = "crossbow bolt" then put drop bolt
tend_bleeder2:
     pause 0.1
     send put tend my %bleeder
     pause 0.1
          if contains("$roomobjs","driftwood log") && ("$righthand" = "crossbow bolt") || ("$lefthand" = "crossbow bolt") then
          {
          put put my bolt in log
          pause 0.1
          }
     pause 0.2
     if "$righthandnoun" = "arrow" then put drop arrow
     if "$lefthandnoun" = "arrow" then put drop arrow
     if "$righthand" = "crossbow bolt" then put drop bolt
     if "$lefthand" = "crossbow bolt" then put drop bolt
     pause 0.1
     pause 0.1
     echo [Leaving Bleeder System]
     RETURN
END.OF.BLEEDER:
     var BLEEDING_HEAD NO
     var BLEEDING_NECK NO
     var BLEEDING_CHEST NO
     var BLEEDING_ABDOMEN NO
     var BLEEDING_BACK NO
     var BLEEDING_R_ARM NO
     var BLEEDING_L_ARM NO
     var BLEEDING_R_LEG NO
     var BLEEDING_L_LEG NO
     var BLEEDING_R_HAND NO
     var BLEEDING_L_HAND NO
     var BLEEDING_L_EYE NO
     var BLEEDING_R_EYE NO
     var BLEEDING_SKIN NO
     action remove The bandages binding your (.+) soak through with blood becoming useless and you begin bleeding again\.
     RETURN
#version 1.0
	Base.ListExtract:
		var Base.ListVar $1
		var Base.NounListVar $2
		var Base.ItemCountVar $3

		eval %Base.ListVar replace("%%Base.ListVar", ", ", "|")
		eval %Base.ListVar replacere("%%Base.ListVar", "( and )(?:a |an |some )(?!.*and (a |an |some ))","|")
		var %Base.ListVar |%%Base.ListVar
		eval %Base.ItemCountVar count("%%Base.ListVar", "|")
		var %Base.NounListVar %%Base.ListVar
	Base.ListExtract.Loop.Trim:
		eval %Base.NounListVar replacere ("%%Base.NounListVar", "\|[\w'-]+ ", "|")
		if contains("%%Base.NounListVar", " ") then goto Base.ListExtract.Loop.Trim
	RETURN

PAUSEZ:
     pause $roundtime
     pause 0.5
     RETURN

automove:
     var toroom $1
     if "$roomid" = "0" then gosub moveRandomDirection
automovecont:
     matchre automove.return YOU HAVE ARRIVED|SHOP CLOSED
     matchre automovecont YOU HAVE FAILED|MOVE FAILED
     matchre automovehide You can't sneak|In which
     put #goto %toroom
     matchwait

automovehide:
     if $hidden = 1 then put shiv
     pause 0.1
     goto automovecont

automove.return:
     pause 0.1
     RETURN

STAND:
     delay 0.0001
     var LOCATION STAND_1
     STAND_1:
     matchre WAIT ^\.\.\.wait|^Sorry\,
     matchre WAIT ^Roundtime\:?|^\[Roundtime\:?|^\(Roundtime\:?
     matchre WAIT ^The weight of all your possessions prevents you from standing\.
     matchre WAIT ^You are overburdened and cannot manage to stand\.
     matchre STUNNED ^You are still stunned
     matchre WEBBED ^You can't do that while entangled in a web
     matchre IMMOBILE ^You don't seem to be able to move to do that
     matchre STAND_RETURN ^You stand (?:back )?up\.
     matchre STAND_RETURN ^You are already standing\.
     send stand
     matchwait
     STAND_RETURN:
     pause 0.1
     pause 0.1
     if (!$standing) then goto STAND
     return

stowAmmo:
     pause 0.1
     if matchre("$righthand","(partisan|shield|light crossbow|buckler|lumpy bundle|halberd|mistwood longbow|gloomwood khuj|halberd)") && ("$lefthand" != "Empty") then gosub wear my $1
     if matchre("$lefthand","(partisan|shield|light crossbow|buckler|lumpy bundle|halberd|mistwood longbow|gloomwood khuj|halberd)") && ("$righthand" != "Empty") then gosub wear my $1
     if matchre("$roomobjs","(basilisk head arrow\b|cane arrow\b|bone-tipped arrow\b|barbed arrow\b|stone-tipped arrow\b|serrated-bodkin arrow\b|razor-edged arrow|razor-tipped arrow\b)") then gosub stow $1
     if contains("$roomobjs","(double-stringed crossbow|repeating crossbow|bloodwood dako'gi crossbow|forester's crossbow|bamboo crossbow|forester's bow|battle bow|assassin's crossbow") then gosub stow $1
     if contains("$roomobjs","(ironwood shield|wooden shield)") then gosub stow $1
     if matchre("$roomobjs","(elongated stones|granite stone)") then gosub stow stone
     if matchre("$roomobjs","(river rock|river rocks|small rock)") then gosub stow rock
     if matchre("$roomobjs","(leafhead bolt|barbed bolt|crossbow bolt)") then gosub stow bolt
     if contains("$roomobjs","throwing blade") then gosub stowblade
     if contains("$roomobjs","sleek quadrello") then gosub stow quadrello
     if contains("$roomobjs","stones") then gosub stow stones
     if contains("$roomobjs","hand claws") then gosub stow hand claw
     if contains("$roomobjs","T'Kashi mirror flamberge") then gosub stow mirror flamberge
     if contains("$roomobjs","T'Kashi mirror flail") then gosub stow mirror flail
     if contains("$roomobjs","mirror blade") then gosub stow mirror blade
     if contains("$roomobjs","mirror knife") then gosub stow mirror knife
     if contains("$roomobjs","Nisha short bow") then gosub stow nisha bow
     if contains("$roomobjs","razor-sharp damascus steel sabre") then gosub stow sabre
     if contains("$roomobjs","glaes and kertig-alloy katana capped with an ornate dragonfire amber pommel") then gosub stow katana
     if !matchre("$roomobjs","(mirror axe|stonebow|briquet|battle bow|akabo|throwing spike|steel scimitar|thrusting blade|flail|kneecapper|spear|hammer|throwing hammer|bone club|javelin|tago|staff sling|bludgeon|quarrel|short bow|telo|flamberge|flail|nightstick|khuj|iltesh|ngalio|hirdu bow|halberd|mirror blade|katana|morning star|war club|shadowy-black sling|staff sling|mattock|leathers|balaclava|helmet|helm|gauntlets|mail gloves|sniper's crossbow|light crossbow|targe\b|great helm|throwing axe|throwing club|bastard sword|jambiya|katar|throwing blade|composite bow|bola|short bow)") then return
     gosub stow $1
     goto stowAmmo

STOWING:
     pause 0.1
     var location STOWING
     if "$righthand" = "vine" then put drop vine
     if "$lefthand" = "vine" then put drop vine
     if "$righthandnoun" = "rope" then put coil my rope
     if "$righthand" = "bundle" || "$lefthand" = "bundle" then put wear bund;drop bun
     #if matchre("$righthandnoun","(crossbow|bow|short bow)") then gosub unload
     if matchre("$righthandnoun","(block|granite block)") then put drop block
     if matchre("$lefthandnoun","(block|granite block)") then put drop block
     if matchre("$righthand","(partisan|shield|buckler|lumpy bundle|halberd|staff|longbow|khuj)") then gosub wear my $1
     if matchre("$lefthand","(partisan|shield|buckler|lumpy bundle|halberd|staff|longbow|khuj)") then gosub wear my $1
     if matchre("$lefthand","(longbow|khuj)") then gosub stow my $1 in my %SHEATH
     if "$righthand" != "Empty" then GOSUB STOW right
     if "$lefthand" != "Empty" then GOSUB STOW left
     RETURN

STOW:
     var location stow1
     var todo $0
stow1:
     if "$righthand" = "vine" then put drop vine
     if "$lefthand" = "vine" then put drop vine
     pause 0.2
     pause 0.1
     if matchre("$righthand","longbow") then goto stow4
     matchre stow2 not designed to carry anything|any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide|^But that's closed|I can't find your container
     matchre return ^Wear what\?|^Stow what\?
     matchre return ^You put
     matchre return ^You stop as you realize
     matchre return ^But that is already in your inventory\.
     matchre return ^That can't be picked up
     matchre location.unload ^You should unload the
     matchre location.unload ^You need to unload the
     put stow %todo
     GOTO retry
stow2:
     pause 0.5
     pause 0.1
     pause 0.1
     pause 0.1
     var location stow2
     matchre return ^Wear what\?|^Stow what\?
     matchre return ^You put
     matchre return ^But that is already in your inventory\.
     matchre stow3 any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide|not designed to carry anything|^But that's closed
     matchre location.unload ^You should unload the
     matchre location.unload ^You need to unload the
     put stow %todo in my %container1
     GOTO retry
stow3:
     pause 0.5
     pause 0.1
     pause 0.1
     pause 0.1
     var location stow3
     if "$lefthandnoun" = "bundle" then put drop bun
     if "$righthandnoun" = "bundle" then put drop bun
     matchre open.thing ^But that's closed
     matchre return ^Wear what\?|^Stow what\?
     matchre return ^You put
     matchre return ^But that is already in your inventory\.
     matchre stow4 any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide|not designed to carry anything|^But that's closed
     matchre location.unload ^You should unload the
     matchre location.unload ^You need to unload the
     put stow %todo in my %container2
     GOTO retry
stow4:
     pause 0.5
     pause 0.1
     var location stow4
     if "$lefthandnoun" = "bundle" then put drop bun
     if "$righthandnoun" = "bundle" then put drop bun
     matchre open.thing ^But that's closed
     matchre return ^Wear what\?|^Stow what\?
     matchre return ^You put your
     matchre return ^But that is already in your inventory\.
     matchre stow5 any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide
     matchre location.unload ^You should unload the
     matchre location.unload ^You need to unload the
     put stow %todo in my %container3
     GOTO retry
stow5:
     pause 0.5
     pause 0.1
     var location stow5
     if "$lefthandnoun" = "bundle" then put drop bun
     if "$righthandnoun" = "bundle" then put drop bun
     matchre open.thing ^But that's closed
     matchre return ^Wear what\?|^Stow what\?
     matchre return ^You put your
     matchre return ^But that is already in your inventory\.
     matchre REM.WEAR any more room|no matter how you arrange|^That's too heavy|too thick|too long|too wide
     matchre location.unload ^You should unload the
     matchre location.unload ^You need to unload the
     put stow %todo in my %sheath
     GOTO retry
UNLOAD:
     var location unload
     matchre RETURN ^You unload the
     matchre RETURN ^You remain concealed by your surroundings, convinced that your unloading
     matchre RETURN ^Roundtime:
     matchre RETURN ^But your
     matchre RETURN ^You don't have a
     matchre RETURN ^You can't unload such a weapon\.
     matchre RETURN ^Your
     send unload
     goto retry

OPEN.THING:
     put open %container2
     put open %container1
     pause 0.2
     goto STOWING

#### WEAR SUB
REM.WEAR:
     put rem bund
     put drop bund
     wait
     pause 0.5
     goto wear.1
WEAR:
     delay 0.0001
     var stow $0
     var LOCATION WEAR.1
     WEAR.1:
     matchre WAIT ^\.\.\.wait|^Sorry\,
     matchre IMMOBILE ^You don't seem to be able to move to do that
     matchre WEBBED ^You can't do that while entangled in a web
     matchre STUNNED ^You are still stunned
     matchre stow1 ^You can't wear that\!
     matchre stow1 ^You can't wear any more items like that\.
     matchre stow1 ^You need at least one free hand for that\.
     matchre stow1 ^This .* can't fit over the .* you are already wearing which also covers and protects your .*\.
     matchre RETURN ^You (?:sling|put|slide|slip|attach|work|strap) .*\.
     matchre RETURN ^You are already wearing that\.
     matchre RETURN ^What were you referring to\?
     matchre RETURN ^Wear what\?
     send wear %stow
     matchwait 15
     put #echo >$Log Crimson $datetime *** MISSING MATCH IN WEAR! (utility.inc) ***
     put #echo >$Log Crimson $datetime Stow = %stow
     put #log $datetime MISSING MATCH IN WEAR (utility.inc)
     return

#### CATCH AND RETRY SUBS
WAIT:
     delay 0.0001
     pause 0.1
     if (!$standing) then gosub STAND
     goto %LOCATION
WEBBED:
     delay 0.0001
     if ($webbed) then waiteval (!$webbed)
     if (!$standing) then gosub STAND
     goto %LOCATION
IMMOBILE:
     delay 0.0001
     if contains("$prompt" , "I") then pause 20
     if (!$standing) then gosub STAND
     goto %LOCATION
STUNNED:
     delay 0.0001
     if ($stunned) then waiteval (!$stunned)
     if (!$standing) then gosub STAND
     goto %LOCATION
#### RETURNS
RETURN.CLEAR:
     delay 0.0001
     put #queue clear
     pause 0.0001
     return

RETRY:
     matchre location ^\.\.\.wait
     matchre location ^Sorry, you may
     matchre location ^Sorry, system is slow
     matchre location ^You don't seem to be able to move to do that
     matchre location.p ^It's all a blur
     matchre location.p ^You're unconscious\!
     matchre location.p ^You are still stunned
     matchre location.p There is no need for violence here\.
     matchre location.p ^You can't do that while entangled in a web
     matchre location.p ^You struggle against the shadowy webs to no avail\.
     matchre location.p ^You attempt that, but end up getting caught in an invisible box\.
     matchre location1 ^You should stop playing before you do that\.
     matchre location1 ^You are a bit too busy performing to do that\.
     matchre location1 ^You are concentrating too much upon your performance to do that\.
     matchwait 22
     put #echo >Log yellow matchwait %location %todo

location.p:
pause
location:
pause 0.1
goto %location

location.unload:
GOSUB unload
var location stow1
GOSUB stow1
return

location.unload1:
GOSUB unload
var location wear.1
GOSUB wear.1
return

location1:
GOSUB stop.humming1
goto %location

return.p:
pause 0.1
RETURN:
delay 0.0001
return